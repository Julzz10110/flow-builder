{"version":3,"file":"js/app.8209c9d4.js","mappings":"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","sources":["webpack://flow-builder/./src/components/icons/pathsData.js","webpack://flow-builder/./src/components/icons/CustomIcon.vue","webpack://flow-builder/./src/components/icons/CustomIcon.vue?79eb","webpack://flow-builder/./src/components/ToolPanel.vue?ed4a","webpack://flow-builder/./src/components/ToolPanel.vue","webpack://flow-builder/./src/components/ToolPanel.vue?cff6","webpack://flow-builder/./src/types/nodesConfig.ts","webpack://flow-builder/./src/components/NodeContextMenu.vue?5592","webpack://flow-builder/./src/components/NodeContextMenu.vue","webpack://flow-builder/./src/components/NodeContextMenu.vue?e61d","webpack://flow-builder/./src/components/NodeSelectionMenu.vue?623f","webpack://flow-builder/./src/components/NodeSelectionMenu.vue","webpack://flow-builder/./src/components/NodeSelectionMenu.vue?6f94","webpack://flow-builder/./src/components/FlowBuilder.vue?9a23","webpack://flow-builder/./src/components/FlowBuilder.vue","webpack://flow-builder/./src/components/FlowBuilder.vue?bc76","webpack://flow-builder/./src/App.vue?2a5e","webpack://flow-builder/./src/App.vue","webpack://flow-builder/./src/App.vue?7ccd","webpack://flow-builder/./src/directives/clickOutside.js","webpack://flow-builder/./src/main.ts","webpack://flow-builder/webpack/bootstrap","webpack://flow-builder/webpack/runtime/chunk loaded","webpack://flow-builder/webpack/runtime/compat get default export","webpack://flow-builder/webpack/runtime/define property getters","webpack://flow-builder/webpack/runtime/global","webpack://flow-builder/webpack/runtime/hasOwnProperty shorthand","webpack://flow-builder/webpack/runtime/make namespace object","webpack://flow-builder/webpack/runtime/jsonp chunk loading","webpack://flow-builder/webpack/startup"],"sourcesContent":["export const pathsData = {\r\n    // viewBox = '0 0 16 16'\r\n    question: [\r\n        {\r\n            d: 'M8 2C6.346 2 5 3.346 5 5a.75.75 0 0 0 1.5 0c0-.826.674-1.5 1.5-1.5s1.5.674 1.5 1.5c0 .653-.122 1.018-.254 1.25c-.137.242-.321.41-.601.643l-.051.042c-.26.215-.612.507-.88.939c-.3.483-.464 1.08-.464 1.876v.5a.75.75 0 0 0 1.5 0v-.5c0-.579.116-.888.239-1.085c.136-.219.316-.37.616-.62c.283-.236.66-.553.945-1.053c.29-.51.45-1.145.45-1.992c0-1.654-1.346-3-3-3zm0 12.25a1 1 0 1 0 0-2a1 1 0 0 0 0 2z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Question16Filled\r\n    settings: [\r\n        {\r\n            d: 'M2.267 6.153A5.986 5.986 0 0 1 3.53 3.98a.355.355 0 0 1 .382-.095l1.36.484a.71.71 0 0 0 .935-.538l.26-1.416a.354.354 0 0 1 .274-.282a6.072 6.072 0 0 1 2.52 0c.14.03.248.141.274.282l.26 1.416a.708.708 0 0 0 .935.538l1.36-.484a.355.355 0 0 1 .382.095c.569.627 1 1.367 1.262 2.173a.352.352 0 0 1-.108.378l-1.102.931a.703.703 0 0 0 0 1.076l1.102.931c.11.093.152.242.108.378a5.985 5.985 0 0 1-1.262 2.173a.355.355 0 0 1-.382.095l-1.36-.484a.71.71 0 0 0-.935.538l-.26 1.416a.353.353 0 0 1-.275.282a6.068 6.068 0 0 1-2.519 0a.354.354 0 0 1-.275-.282l-.259-1.416a.708.708 0 0 0-.935-.538l-1.36.484a.355.355 0 0 1-.382-.095a5.986 5.986 0 0 1-1.262-2.173a.352.352 0 0 1 .108-.378l1.102-.931a.704.704 0 0 0 0-1.076l-1.102-.931a.352.352 0 0 1-.108-.378zM6.25 8a1.75 1.75 0 1 0 3.5 0a1.75 1.75 0 0 0-3.5 0z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Settings16Filled\r\n    plus: [\r\n        {\r\n            d: 'M8.5 2.75a.75.75 0 0 0-1.5 0V7H2.75a.75.75 0 0 0 0 1.5H7v4.25a.75.75 0 0 0 1.5 0V8.5h4.25a.75.75 0 0 0 0-1.5H8.5V2.75z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Add16Filled\r\n    play: [\r\n        {\r\n            d: 'M6.235 2.192A1.5 1.5 0 0 0 4 3.499v9a1.5 1.5 0 0 0 2.235 1.308l8-4.5a1.5 1.5 0 0 0 0-2.615l-8-4.5z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Play16Filled\r\n    pause: [\r\n        {\r\n            d: 'M3.5 2A1.5 1.5 0 0 0 2 3.5v9A1.5 1.5 0 0 0 3.5 14h2A1.5 1.5 0 0 0 7 12.5v-9A1.5 1.5 0 0 0 5.5 2h-2zm7 0A1.5 1.5 0 0 0 9 3.5v9a1.5 1.5 0 0 0 1.5 1.5h2a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 12.5 2h-2z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Pause16Filled\r\n    delete: [\r\n        {\r\n            d: 'M10 4h3a.5.5 0 0 1 0 1h-.553l-.752 6.776A2.5 2.5 0 0 1 9.21 14H6.79a2.5 2.5 0 0 1-2.485-2.224L3.552 5H3a.5.5 0 0 1 0-1h3a2 2 0 1 1 4 0zM8 3a1 1 0 0 0-1 1h2a1 1 0 0 0-1-1zM6.5 7v4a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0zM9 6.5a.5.5 0 0 0-.5.5v4a.5.5 0 0 0 1 0V7a.5.5 0 0 0-.5-.5z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Delete16Filled\r\n    refresh: [\r\n        {\r\n            d: 'M3 8a5 5 0 0 1 9-3H9.5a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5v-.657V2.5a.5.5 0 0 0-1 0v1.028A6 6 0 1 0 14 8a.5.5 0 0 0-1 0A5 5 0 0 1 3 8z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:ArrowClockwise16Regular\r\n    code: [\r\n        {\r\n            d: 'M9.803 3.043a.5.5 0 0 1 .254.66l-4 9a.5.5 0 0 1-.914-.406l4-9a.5.5 0 0 1 .66-.254zm-5.47 2.333a.5.5 0 0 1 .04.706L2.67 8l1.705 1.918a.5.5 0 1 1-.748.664l-2-2.25a.5.5 0 0 1 0-.664l2-2.25a.5.5 0 0 1 .706-.042zm7.335 0a.5.5 0 0 1 .706.042l2 2.25a.5.5 0 0 1 0 .664l-2 2.25a.5.5 0 1 1-.748-.664L13.331 8l-1.705-1.918a.5.5 0 0 1 .042-.706z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Code16Regular\r\n    download: [\r\n        {\r\n            d: 'M3.5 13h9a.75.75 0 0 1 .102 1.493l-.102.007h-9a.75.75 0 0 1-.102-1.493L3.5 13h9h-9zM7.898 1.007L8 1a.75.75 0 0 1 .743.648l.007.102v7.688l2.255-2.254a.75.75 0 0 1 .977-.072l.084.072a.75.75 0 0 1 .072.977l-.072.084L8.53 11.78a.75.75 0 0 1-.976.073l-.084-.073l-3.536-3.535a.75.75 0 0 1 .977-1.133l.084.072L7.25 9.44V1.75a.75.75 0 0 1 .648-.743L8 1l-.102.007z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:ArrowDownload16Filled\r\n    upload: [\r\n        {\r\n            d: 'M3.75 2a.75.75 0 0 0 0 1.5h8.5a.75.75 0 0 0 0-1.5h-8.5zm4.78 2.72a.75.75 0 0 0-1.06 0L4.22 7.97a.75.75 0 0 0 1.06 1.06l1.97-1.97v6.19a.75.75 0 0 0 1.5 0V7.06l1.97 1.97a.75.75 0 1 0 1.06-1.06L8.53 4.72z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:ArrowUpload16Filled\r\n    edit: [\r\n        {\r\n            d: 'M13.416 2.584c.778.778.778 2.039 0 2.817L6.058 12.76c-.319.32-.719.546-1.156.655l-2.283.57a.498.498 0 0 1-.604-.603l.57-2.283a2.49 2.49 0 0 1 .656-1.156l7.358-7.358a1.992 1.992 0 0 1 2.817 0zM9.894 4.697l-5.949 5.949a1.495 1.495 0 0 0-.393.694l-.369 1.477l1.477-.37c.263-.065.503-.2.694-.392l5.949-5.95l-1.409-1.408zm1.41-1.41l-.705.705l1.408 1.409l.705-.704a.996.996 0 0 0-1.409-1.41z',\r\n            fill: 'currentColor',\r\n        },\r\n    ],// fluent:Edit16Regular\r\n\r\n}","<script>\r\nimport { h } from 'vue'\r\n\r\nexport default {\r\n  props: {\r\n    size: {\r\n      type: [Number, String],\r\n      default: 20,\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: 'currentColor',\r\n    },\r\n    viewBox: {\r\n      type: String,\r\n      default: '0 0 16 16',\r\n    },\r\n    paths: {\r\n      type: Array,\r\n      required: true,\r\n      // каждый элемент — объект с атрибутами для <path>, например { d: '...', fill: 'currentColor' }\r\n    },\r\n  },\r\n  setup(props) {\r\n    return () =>\r\n      h(\r\n        'svg',\r\n        {\r\n          xmlns: 'http://www.w3.org/2000/svg',\r\n          viewBox: props.viewBox,\r\n          fill: props.color,\r\n          width: props.size,\r\n          height: props.size,\r\n          'aria-hidden': 'true',\r\n          focusable: 'false',\r\n        },\r\n        props.paths.map((pathAttrs) => h('path', pathAttrs))\r\n      )\r\n  },\r\n}\r\n</script>","import script from \"./CustomIcon.vue?vue&type=script&lang=js\"\nexport * from \"./CustomIcon.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"tool-panel\" }\n\nimport { ref, computed, h } from 'vue';\r\nimport {\r\n  NButton,\r\n  NIcon,\r\n  NInput,\r\n  NSpace,\r\n  NPopover,\r\n  NList,\r\n  NListItem,\r\n  NCard,\r\n  NForm,\r\n  NFormItem,\r\n  NCode,\r\n  NText,\r\n  // NUpload,\r\n  useMessage\r\n} from 'naive-ui';\r\nimport { useVueFlow, Edge } from '@vue-flow/core';\r\nimport YAML from 'yaml';\r\nimport CustomNode from '../types';\r\n// import config from '../types/nodesConfig';\r\nimport { pathsData } from './icons';\r\nimport CustomIcon from './icons/CustomIcon.vue';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ToolPanel',\n  props: {\r\n  elements: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  isRunning: Boolean,\r\n  isStopped: Boolean,\r\n  selectedNode: Object,\r\n  selectedEdge: Object\r\n},\n  emits: [\r\n  'add-node', 'start-flow', 'stop-flow', 'continue-flow',\r\n  'reset-flow', 'update-node-label',\r\n  'delete-selected-edge', 'import-json'\r\n],\n  setup(__props, { emit: __emit }) {\n\r\nconst {\r\n  getEdges,\r\n  // addEdges,\r\n  // setNodes,\r\n  // setEdges\r\n} = useVueFlow();\r\n\r\nconst message = useMessage();\r\nconst fileInput = ref<HTMLInputElement | null>(null);\r\n\r\n// create icon\r\nconst createIcon = (iconName: string) => {\r\n  const iconPaths = pathsData?.[iconName];\r\n  return iconPaths ? h(CustomIcon, { paths: iconPaths }) : null;\r\n};\r\n\r\n// icons\r\nconst QuestionIcon = createIcon('question');\r\nconst PlusIcon = createIcon('plus');\r\nconst PlayIcon = createIcon('play');\r\nconst PauseIcon = createIcon('pause');\r\nconst DeleteIcon = createIcon('delete');\r\nconst RefreshIcon = createIcon('refresh');\r\nconst CodeIcon = createIcon('code');\r\nconst DownloadIcon = createIcon('download');\r\nconst UploadIcon = createIcon('upload');\r\nconst EditIcon = createIcon('edit');\r\n\r\nconst props = __props;\r\n\r\nconst emit = __emit;\r\n\r\nconst flowName = ref('my_flow');\r\nconst flowDescription = ref('My flow\\'s description');\r\nconst daguYaml = ref('');\r\nconst pipelineJson = ref('');\r\nconst showPipelineJson = ref(false);\r\nconst showDaguYaml = ref(false);\r\nconst showHints = ref(false);\r\n\r\nconst isGraphValid = computed(() => {\r\n  const visited = new Set<string>();\r\n  let currentNode: string | null = 'start';\r\n  \r\n  while (currentNode && currentNode !== 'end') {\r\n    if (visited.has(currentNode)) return false;\r\n    visited.add(currentNode);\r\n    \r\n    const edgesFromCurrent = getEdges.value.filter(e => e.source === currentNode);\r\n    if (edgesFromCurrent.length !== 1) return false;\r\n    \r\n    currentNode = edgesFromCurrent[0].target;\r\n  }\r\n  \r\n  return currentNode === 'end';\r\n});\r\n\r\nconst getNextNode = (nodeId: string): string | null => {\r\n  const edges = props.elements.filter((el: any) => el.source === nodeId && el.target) as Edge[];\r\n  return edges.length > 0 ? edges[0].target : null;\r\n};\r\n\r\nconst generateDAGUYaml = () => {\r\n  const steps = [];\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    \r\n    const node = props.elements.find(n => n.id === nextNode) as CustomNode;\r\n    if (node && !isProtectedNode(node.id)) {\r\n      const step: any = {\r\n        name: node.data.label,\r\n      };\r\n\r\n      // handle proc_get_request\r\n      if (node.data.label === 'proc_get_request') {\r\n        step.executor = {\r\n          type: 'http',\r\n          config: {\r\n            silent: true,\r\n            headers: node.data.headers\r\n          }\r\n        };\r\n        step.command = `GET ${node.data.url}`;\r\n        step.output = node.data.label.toUpperCase() + '_DATA';\r\n        \r\n        if (node.data.headers && node.data.headers.length > 0) {\r\n          step.executor.config.headers = node.data.headers.reduce((acc: Record<string, string>, header: string) => {\r\n            const [key, value] = header.split(':').map(s => s.trim());\r\n            if (key && value) acc[key] = value;\r\n            return acc;\r\n          }, {});\r\n        }\r\n      } \r\n      // handle proc_json_filter\r\n      else if (node.data.label === 'proc_json_filter') {\r\n        step.executor = 'command';\r\n        \r\n        // generate the Node.js filter code\r\n        let filterCode = `\r\nconst input = JSON.parse(process.env.${getPreviousNodeOutputName(node.id)});\r\nconst result = ${node.data.list || 'input'}.filter(item => {\r\n  return ${generateNodeFilterConditions(node.data.conditions || [])};\r\n});\r\n${node.data.output_fields?.length > 0 ? \r\n  `console.log(JSON.stringify(result.map(item => (${generateOutputFields(node.data.output_fields)}))));` : \r\n  'console.log(JSON.stringify(result));'}\r\n`;\r\n        \r\n        step.command = `node -e \"${filterCode.replace(/\"/g, '\\\\\"').replace(/\\n/g, '')}\"`;\r\n        step.output = 'FILTERED_DATA';\r\n      }\r\n      // handle other node types\r\n      else {\r\n        step.command = node.data.command || '';\r\n      }\r\n      \r\n      steps.push(step);\r\n    }\r\n    currentNode = nextNode;\r\n  }\r\n  \r\n  const daguConfig = {\r\n    name: flowName.value,\r\n    description: flowDescription.value,\r\n    steps: steps\r\n  };\r\n  \r\n  daguYaml.value = YAML.stringify(daguConfig);\r\n};\r\n\r\n\r\n// helper function to get previous node's output name\r\nconst getPreviousNodeOutputName = (nodeId: string) => {\r\n  const edges = getEdges.value;\r\n  const edge = edges.find(e => e.target === nodeId);\r\n  if (!edge) return '';\r\n\r\n  const prevNode = props.elements.find(n => n.id === edge.source) as CustomNode;\r\n  return prevNode ? `${prevNode.data.label.toUpperCase()}_DATA` : '';\r\n};\r\n\r\n// helper function to generate filter conditions for Node.js\r\nconst generateNodeFilterConditions = (conditions: any[]) => {\r\n  return conditions\r\n    .filter(cond => cond.field && cond.operator && cond.value !== undefined)\r\n    .map(cond => {\r\n      const fieldPath = cond.field.includes('.') \r\n        ? cond.field.split('.').join('?.') \r\n        : `item?.${cond.field}`;\r\n      \r\n      let value = cond.value;\r\n      if (typeof value === 'string' && !['true', 'false'].includes(value) && isNaN(Number(value))) {\r\n        value = `'${value.replace(/'/g, \"\\\\'\")}'`;\r\n      }\r\n\r\n      switch(cond.operator) {\r\n        case '==': return `${fieldPath} == ${value}`;\r\n        case '!=': return `${fieldPath} != ${value}`;\r\n        case 'contains': \r\n          return typeof value === 'string' \r\n            ? `${fieldPath}?.includes(${value})`\r\n            : `${fieldPath}?.includes(${value})`;\r\n        default: return `${fieldPath} ${cond.operator} ${value}`;\r\n      }\r\n    })\r\n    .join(' && ') || 'true'; // default to true if no conditions\r\n};\r\n\r\n// helper function to generate output fields mapping\r\nconst generateOutputFields = (fields: string[]) => {\r\n  return `{\r\n    ${fields.map(field => `'${field}': item?.${field}`).join(',\\n    ')}\r\n  }`;\r\n};\r\n\r\nconst generatePipelineJson = () => {\r\n  const steps = [];\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    \r\n    const node = props.elements.find(n => n.id === nextNode) as CustomNode;\r\n    if (node && !isProtectedNode(node.id)) {\r\n      const step: any = {\r\n        name: node.data.label,\r\n        command: node.data.command || '',\r\n      };\r\n\r\n      const allParams = Object.keys(node.data)\r\n        .filter(key => !['label', 'command', 'processFunction'].includes(key))\r\n        .reduce((acc, key) => {\r\n          acc[key] = node.data[key];\r\n          return acc;\r\n        }, {} as Record<string, any>);\r\n      \r\n      if (Object.keys(allParams).length > 0) {\r\n        step.params = allParams;\r\n      }\r\n      \r\n      steps.push(step);\r\n    }\r\n    currentNode = nextNode;\r\n  }\r\n  \r\n  const pipelineConfig = {\r\n    name: flowName.value,\r\n    description: flowDescription.value,\r\n    steps: steps\r\n  };\r\n  \r\n  pipelineJson.value = JSON.stringify(pipelineConfig, null, 2);\r\n};\r\n\r\nconst downloadDAGUYaml = () => {\r\n  if (!daguYaml.value) return;\r\n  \r\n  const blob = new Blob([daguYaml.value], { type: 'application/yaml' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `${flowName.value}.yaml`.replace(/\\s+/g, '_');\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\nconst downloadPipelineJson = () => {\r\n  if (!pipelineJson.value) return;\r\n  \r\n  const blob = new Blob([pipelineJson.value], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `${flowName.value}.json`.replace(/\\s+/g, '_');\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\n\r\n// functions of import\r\nconst triggerFileInput = () => {\r\n  fileInput.value?.click();\r\n};\r\n\r\nconst handleFileSelect = async (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  if (!input.files || input.files.length === 0) return;\r\n\r\n  const file = input.files[0];\r\n  if (!file) return;\r\n\r\n  try {\r\n    const content = await readFileAsText(file);\r\n    const jsonConfig = JSON.parse(content);\r\n    \r\n    if (!jsonConfig || typeof jsonConfig !== 'object') {\r\n      throw new Error('Invalid JSON format');\r\n    }\r\n    \r\n    flowName.value = jsonConfig.name || 'imported_flow';\r\n    flowDescription.value = jsonConfig.description || '';\r\n    \r\n    emit('import-json', jsonConfig);\r\n    message.success('Flow импортирован успешно');\r\n  } catch (error) {\r\n    message.error(`Import failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    console.error('Import error:', error);\r\n  } finally {\r\n    if (input) input.value = '';\r\n  }\r\n};\r\n\r\nconst readFileAsText = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => resolve(reader.result as string);\r\n    reader.onerror = () => reject(new Error('File reading failed'));\r\n    reader.readAsText(file);\r\n  });\r\n};\r\n\r\n/*\r\nconst handleJsonImport = async (options: { file: File } | FileList | null) => {\r\n  try {\r\n    // Обрабатываем разные варианты входных данных\r\n    let file: File | null = null;\r\n    \r\n    if (options instanceof FileList) {\r\n      file = options[0];\r\n    } else if (options && 'file' in options) {\r\n      file = options.file;\r\n    }\r\n\r\n    if (!file) {\r\n      throw new Error('Файл не выбран');\r\n    }\r\n\r\n    // Читаем содержимое файла\r\n    const fileContent = await readFile(file);\r\n    const jsonConfig = JSON.parse(fileContent);\r\n    \r\n    // Валидация структуры\r\n    if (!jsonConfig?.steps || !Array.isArray(jsonConfig.steps)) {\r\n      throw new Error('Некорректная структура JSON');\r\n    }\r\n    \r\n    // Обновляем название и описание\r\n    flowName.value = jsonConfig.name || 'imported_flow';\r\n    flowDescription.value = jsonConfig.description || '';\r\n    \r\n    // Передаем конфиг в FlowBuilder\r\n    emit('import-json', jsonConfig);\r\n    \r\n    message.success('Граф успешно импортирован');\r\n  } catch (error) {\r\n    console.error('Ошибка импорта:', error);\r\n    message.error(`Ошибка импорта: ${error instanceof Error ? error.message : 'Неизвестная ошибка'}`);\r\n  }\r\n};\r\n\r\nconst readFile = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => resolve(e.target?.result as string);\r\n    reader.onerror = (e) => reject(new Error('Ошибка чтения файла: ' + e));\r\n    reader.readAsText(file);\r\n  });\r\n};\r\n*/ \r\n\r\nconst isProtectedNode = (nodeId: string) => {\r\n  return nodeId === 'start' || nodeId === 'end';\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_unref(NSpace), {\n      justify: \"space-between\",\n      align: \"center\",\n      style: {\"padding\":\"7px 17px\"}\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_unref(NSpace), { style: {\"padding\":\"0 17px\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(NText), {\n              style: {\"color\":\"#f2f2f2\",\"font-size\":\"20px\"},\n              strong: \"\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(flowName.value), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_unref(NPopover), { trigger: \"click\" }, {\n              trigger: _withCtx(() => [\n                _createVNode(_unref(NButton), {\n                  text: \"\",\n                  style: {\"font-size\":\"18px\"},\n                  color: \"#c7c7c7\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(NIcon), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(EditIcon))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              default: _withCtx(() => [\n                _createVNode(_unref(NCard), {\n                  title: \"Настройки пайплайна\",\n                  size: \"small\",\n                  style: {\"width\":\"300px\"}\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(NForm), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(NFormItem), {\n                          label: \"Название\",\n                          path: \"flowName\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_unref(NInput), {\n                              value: flowName.value,\n                              \"onUpdate:value\": _cache[0] || (_cache[0] = ($event: any) => ((flowName).value = $event)),\n                              placeholder: \"Введите название\"\n                            }, null, 8, [\"value\"])\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_unref(NFormItem), {\n                          label: \"Описание\",\n                          path: \"flowDescription\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_unref(NInput), {\n                              value: flowDescription.value,\n                              \"onUpdate:value\": _cache[1] || (_cache[1] = ($event: any) => ((flowDescription).value = $event)),\n                              placeholder: \"Введите описание\",\n                              type: \"textarea\"\n                            }, null, 8, [\"value\"])\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(NSpace), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(NButton), {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.$emit('add-node'))),\n              type: \"primary\",\n              circle: \"\"\n            }, {\n              icon: _withCtx(() => [\n                _createVNode(_unref(NIcon), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(PlusIcon))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_unref(NButton), {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.$emit('start-flow'))),\n              disabled: !isGraphValid.value || props.isRunning,\n              type: \"success\",\n              circle: \"\"\n            }, {\n              icon: _withCtx(() => [\n                _createVNode(_unref(NIcon), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(PlayIcon))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_unref(NButton), {\n              onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.$emit('stop-flow'))),\n              disabled: !props.isRunning || props.isStopped,\n              type: \"warning\",\n              circle: \"\"\n            }, {\n              icon: _withCtx(() => [\n                _createVNode(_unref(NIcon), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(PauseIcon))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            (props.isStopped)\n              ? (_openBlock(), _createBlock(_unref(NButton), {\n                  key: 0,\n                  onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.$emit('reset-flow'))),\n                  type: \"error\",\n                  circle: \"\"\n                }, {\n                  icon: _withCtx(() => [\n                    _createVNode(_unref(NIcon), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(RefreshIcon))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }),\n        (props.selectedEdge)\n          ? (_openBlock(), _createBlock(_unref(NSpace), { key: 0 }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(NButton), {\n                  onClick: _cache[6] || (_cache[6] = ($event: any) => (_ctx.$emit('delete-selected-edge'))),\n                  type: \"error\",\n                  circle: \"\"\n                }, {\n                  icon: _withCtx(() => [\n                    _createVNode(_unref(NIcon), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(DeleteIcon))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        _createVNode(_unref(NSpace), null, {\n          default: _withCtx(() => [\n            (isGraphValid.value)\n              ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                  _createVNode(_unref(NPopover), {\n                    trigger: \"click\",\n                    show: showDaguYaml.value\n                  }, {\n                    trigger: _withCtx(() => [\n                      _createVNode(_unref(NButton), {\n                        onClick: _cache[7] || (_cache[7] = ($event: any) => {generateDAGUYaml(); showDaguYaml.value = !showDaguYaml.value}),\n                        ghost: \"\",\n                        color: \"#c7c7c7\",\n                        size: \"small\"\n                      }, {\n                        icon: _withCtx(() => [\n                          _createVNode(_unref(NIcon), null, {\n                            default: _withCtx(() => [\n                              _createVNode(_unref(CodeIcon))\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        default: _withCtx(() => [\n                          _cache[13] || (_cache[13] = _createTextVNode(\" YAML \"))\n                        ]),\n                        _: 1,\n                        __: [13]\n                      })\n                    ]),\n                    default: _withCtx(() => [\n                      (daguYaml.value)\n                        ? (_openBlock(), _createBlock(_unref(NCard), {\n                            key: 0,\n                            title: \"DAGU Config\",\n                            size: \"small\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_unref(NCode), {\n                                language: \"yaml\",\n                                code: daguYaml.value,\n                                \"word-wrap\": \"\"\n                              }, null, 8, [\"code\"])\n                            ]),\n                            _: 1\n                          }))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  }, 8, [\"show\"]),\n                  _createVNode(_unref(NButton), {\n                    onClick: _cache[8] || (_cache[8] = ($event: any) => (downloadDAGUYaml())),\n                    size: \"small\",\n                    ghost: \"\",\n                    color: \"#c7c7c7\"\n                  }, {\n                    icon: _withCtx(() => [\n                      _createVNode(_unref(NIcon), null, {\n                        default: _withCtx(() => [\n                          _createVNode(_unref(DownloadIcon))\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    default: _withCtx(() => [\n                      _cache[14] || (_cache[14] = _createTextVNode(\" Export YAML \"))\n                    ]),\n                    _: 1,\n                    __: [14]\n                  }),\n                  _createVNode(_unref(NPopover), {\n                    trigger: \"click\",\n                    show: showPipelineJson.value\n                  }, {\n                    trigger: _withCtx(() => [\n                      _createVNode(_unref(NButton), {\n                        onClick: _cache[9] || (_cache[9] = ($event: any) => {generatePipelineJson(); showPipelineJson.value = !showPipelineJson.value}),\n                        ghost: \"\",\n                        color: \"#c7c7c7\",\n                        size: \"small\"\n                      }, {\n                        icon: _withCtx(() => [\n                          _createVNode(_unref(NIcon), null, {\n                            default: _withCtx(() => [\n                              _createVNode(_unref(CodeIcon))\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        default: _withCtx(() => [\n                          _cache[15] || (_cache[15] = _createTextVNode(\" JSON \"))\n                        ]),\n                        _: 1,\n                        __: [15]\n                      })\n                    ]),\n                    default: _withCtx(() => [\n                      (pipelineJson.value)\n                        ? (_openBlock(), _createBlock(_unref(NCard), {\n                            key: 0,\n                            title: \"Конфигурация JSON\",\n                            size: \"small\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_unref(NCode), {\n                                language: \"json\",\n                                code: pipelineJson.value,\n                                \"word-wrap\": \"\"\n                              }, null, 8, [\"code\"])\n                            ]),\n                            _: 1\n                          }))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  }, 8, [\"show\"]),\n                  _createVNode(_unref(NButton), {\n                    onClick: _cache[10] || (_cache[10] = ($event: any) => (downloadPipelineJson())),\n                    size: \"small\",\n                    ghost: \"\",\n                    color: \"#c7c7c7\"\n                  }, {\n                    icon: _withCtx(() => [\n                      _createVNode(_unref(NIcon), null, {\n                        default: _withCtx(() => [\n                          _createVNode(_unref(DownloadIcon))\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    default: _withCtx(() => [\n                      _cache[16] || (_cache[16] = _createTextVNode(\" Export JSON \"))\n                    ]),\n                    _: 1,\n                    __: [16]\n                  })\n                ], 64))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"input\", {\n              type: \"file\",\n              ref_key: \"fileInput\",\n              ref: fileInput,\n              accept: \".json\",\n              style: {\"display\":\"none\"},\n              onChange: handleFileSelect\n            }, null, 544),\n            _createVNode(_unref(NButton), {\n              onClick: _cache[11] || (_cache[11] = ($event: any) => (triggerFileInput())),\n              ghost: \"\",\n              color: \"#c7c7c7\",\n              size: \"small\"\n            }, {\n              icon: _withCtx(() => [\n                _createVNode(_unref(NIcon), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(UploadIcon))\n                  ]),\n                  _: 1\n                })\n              ]),\n              default: _withCtx(() => [\n                _cache[17] || (_cache[17] = _createTextVNode(\" Import JSON \"))\n              ]),\n              _: 1,\n              __: [17]\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(NSpace), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(NPopover), {\n              trigger: \"click\",\n              show: showHints.value\n            }, {\n              trigger: _withCtx(() => [\n                _createVNode(_unref(NButton), {\n                  onClick: _cache[12] || (_cache[12] = ($event: any) => (showHints.value = !showHints.value)),\n                  ghost: \"\",\n                  color: \"#c7c7c7\",\n                  circle: \"\"\n                }, {\n                  icon: _withCtx(() => [\n                    _createVNode(_unref(NIcon), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(QuestionIcon))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              default: _withCtx(() => [\n                _createVNode(_unref(NList), null, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(NListItem), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(NText), null, {\n                          default: _withCtx(() => _cache[18] || (_cache[18] = [\n                            _createElementVNode(\"strong\", null, \"ЛКМ\", -1),\n                            _createTextVNode(\" - Выбрать шаг\")\n                          ])),\n                          _: 1,\n                          __: [18]\n                        })\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_unref(NListItem), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(NText), null, {\n                          default: _withCtx(() => _cache[19] || (_cache[19] = [\n                            _createElementVNode(\"strong\", null, \"ПКМ\", -1),\n                            _createTextVNode(\" - Редактировать параметры шага\")\n                          ])),\n                          _: 1,\n                          __: [19]\n                        })\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_unref(NListItem), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(NText), null, {\n                          default: _withCtx(() => _cache[20] || (_cache[20] = [\n                            _createElementVNode(\"strong\", null, \"Ctrl+A\", -1),\n                            _createTextVNode(\" - Добавить новый шаг\")\n                          ])),\n                          _: 1,\n                          __: [20]\n                        })\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_unref(NListItem), null, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(NText), null, {\n                          default: _withCtx(() => _cache[21] || (_cache[21] = [\n                            _createElementVNode(\"strong\", null, \"Ctrl+X\", -1),\n                            _createTextVNode(\" - Удалить выбранный шаг или связь\")\n                          ])),\n                          _: 1,\n                          __: [21]\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"show\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"tool-panel\">\r\n    <n-space justify=\"space-between\" align=\"center\" style=\"padding: 7px 17px\">\r\n      <!-- Flow Settings -->\r\n      <n-space style=\"padding: 0 17px\">\r\n        <n-text style=\"color: #f2f2f2; font-size: 20px\" strong>{{ flowName }}</n-text>\r\n        <n-popover trigger=\"click\">\r\n          <template #trigger>\r\n            <n-button text style=\"font-size: 18px\" color=\"#c7c7c7\">\r\n              <n-icon><edit-icon /></n-icon>\r\n            </n-button>\r\n          </template>\r\n          <n-card title=\"Настройки пайплайна\" size=\"small\" style=\"width: 300px\">\r\n            <n-form>\r\n              <n-form-item label=\"Название\" path=\"flowName\">\r\n                <n-input \r\n                  v-model:value=\"flowName\" \r\n                  placeholder=\"Введите название\"\r\n                />\r\n              </n-form-item>\r\n              <n-form-item label=\"Описание\" path=\"flowDescription\">\r\n                <n-input \r\n                  v-model:value=\"flowDescription\" \r\n                  placeholder=\"Введите описание\"\r\n                  type=\"textarea\"\r\n                />\r\n              </n-form-item>\r\n            </n-form>\r\n          </n-card>\r\n        </n-popover>\r\n      </n-space>\r\n\r\n      <!-- Flow Management -->\r\n      <n-space>\r\n        <n-button @click=\"$emit('add-node')\" type=\"primary\" circle>\r\n          <template #icon>\r\n            <n-icon><plus-icon /></n-icon>\r\n          </template>\r\n        </n-button>\r\n        <n-button \r\n          @click=\"$emit('start-flow')\" \r\n          :disabled=\"!isGraphValid || props.isRunning\"\r\n          type=\"success\"\r\n          circle\r\n        >\r\n          <template #icon>\r\n            <n-icon><play-icon /></n-icon>\r\n          </template>\r\n        </n-button>\r\n        <n-button \r\n          @click=\"$emit('stop-flow')\" \r\n          :disabled=\"!props.isRunning || props.isStopped\"\r\n          type=\"warning\"\r\n          circle\r\n        >\r\n          <template #icon>\r\n            <n-icon><pause-icon /></n-icon>\r\n          </template>\r\n        </n-button>\r\n        <n-button \r\n          v-if=\"props.isStopped\" \r\n          @click=\"$emit('reset-flow')\"\r\n          type=\"error\"\r\n          circle\r\n        >\r\n          <template #icon>\r\n            <n-icon><refresh-icon /></n-icon>\r\n          </template>\r\n        </n-button>\r\n      </n-space>\r\n\r\n      <!-- Edge Settings -->\r\n      <n-space v-if=\"props.selectedEdge\">\r\n        <n-button @click=\"$emit('delete-selected-edge')\" type=\"error\" circle>\r\n          <template #icon>\r\n            <n-icon><delete-icon /></n-icon>\r\n          </template>\r\n        </n-button>\r\n      </n-space>\r\n\r\n      <!-- Export/Import -->\r\n      <n-space>\r\n        <!-- Export Buttons -->\r\n        <template v-if=\"isGraphValid\">\r\n          <n-popover trigger=\"click\" :show=\"showDaguYaml\">\r\n            <template #trigger>\r\n              <n-button @click=\"generateDAGUYaml(); showDaguYaml = !showDaguYaml\" ghost color=\"#c7c7c7\" size=\"small\">\r\n                <template #icon>\r\n                  <n-icon><code-icon /></n-icon>\r\n                </template>\r\n                YAML\r\n              </n-button>\r\n            </template>\r\n            <n-card v-if=\"daguYaml\" title=\"DAGU Config\" size=\"small\">\r\n              <n-code language=\"yaml\" :code=\"daguYaml\" word-wrap/>\r\n            </n-card>\r\n          </n-popover>\r\n\r\n          <n-button @click=\"downloadDAGUYaml()\" size=\"small\" ghost color=\"#c7c7c7\">\r\n            <template #icon>\r\n              <n-icon><download-icon /></n-icon>\r\n            </template>\r\n            Export YAML\r\n          </n-button>\r\n\r\n          <n-popover trigger=\"click\" :show=\"showPipelineJson\">\r\n            <template #trigger>\r\n              <n-button @click=\"generatePipelineJson(); showPipelineJson = !showPipelineJson\" ghost color=\"#c7c7c7\" size=\"small\">\r\n                <template #icon>\r\n                  <n-icon><code-icon /></n-icon>\r\n                </template>\r\n                JSON\r\n              </n-button>\r\n            </template>\r\n            <n-card v-if=\"pipelineJson\" title=\"Конфигурация JSON\" size=\"small\">\r\n              <n-code language=\"json\" :code=\"pipelineJson\" word-wrap/>\r\n            </n-card>\r\n          </n-popover>\r\n\r\n          <n-button @click=\"downloadPipelineJson()\" size=\"small\" ghost color=\"#c7c7c7\">\r\n            <template #icon>\r\n              <n-icon><download-icon /></n-icon>\r\n            </template>\r\n            Export JSON\r\n          </n-button>\r\n        </template>\r\n\r\n        <!-- Import Button -->\r\n        <input \r\n          type=\"file\" \r\n          ref=\"fileInput\"\r\n          accept=\".json\"\r\n          style=\"display: none\"\r\n          @change=\"handleFileSelect\"\r\n        >\r\n        <n-button \r\n          @click=\"triggerFileInput()\" \r\n          ghost \r\n          color=\"#c7c7c7\" \r\n          size=\"small\"\r\n        >\r\n          <template #icon>\r\n            <n-icon><upload-icon /></n-icon>\r\n          </template>\r\n          Import JSON\r\n        </n-button>\r\n      </n-space>\r\n\r\n      <!-- Tips -->\r\n      <n-space>\r\n        <n-popover trigger=\"click\" :show=\"showHints\">\r\n          <template #trigger>\r\n            <n-button @click=\"showHints = !showHints\" ghost color=\"#c7c7c7\" circle>\r\n              <template #icon>\r\n                <n-icon><question-icon /></n-icon>\r\n              </template>\r\n            </n-button>\r\n          </template>\r\n          <n-list>\r\n            <n-list-item>\r\n              <n-text><strong>ЛКМ</strong> - Выбрать шаг</n-text>\r\n            </n-list-item>\r\n            <n-list-item>\r\n              <n-text><strong>ПКМ</strong> - Редактировать параметры шага</n-text>\r\n            </n-list-item>\r\n            <n-list-item>\r\n              <n-text><strong>Ctrl+A</strong> - Добавить новый шаг</n-text>\r\n            </n-list-item>\r\n            <n-list-item>\r\n              <n-text><strong>Ctrl+X</strong> - Удалить выбранный шаг или связь</n-text>\r\n            </n-list-item>\r\n          </n-list>\r\n        </n-popover>\r\n      </n-space>\r\n    </n-space>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, defineProps, defineEmits, computed, h } from 'vue';\r\nimport {\r\n  NButton,\r\n  NIcon,\r\n  NInput,\r\n  NSpace,\r\n  NPopover,\r\n  NList,\r\n  NListItem,\r\n  NCard,\r\n  NForm,\r\n  NFormItem,\r\n  NCode,\r\n  NText,\r\n  // NUpload,\r\n  useMessage\r\n} from 'naive-ui';\r\nimport { useVueFlow, Edge } from '@vue-flow/core';\r\nimport YAML from 'yaml';\r\nimport CustomNode from '../types';\r\n// import config from '../types/nodesConfig';\r\nimport { pathsData } from './icons';\r\nimport CustomIcon from './icons/CustomIcon.vue';\r\n\r\nconst {\r\n  getEdges,\r\n  // addEdges,\r\n  // setNodes,\r\n  // setEdges\r\n} = useVueFlow();\r\n\r\nconst message = useMessage();\r\nconst fileInput = ref<HTMLInputElement | null>(null);\r\n\r\n// create icon\r\nconst createIcon = (iconName: string) => {\r\n  const iconPaths = pathsData?.[iconName];\r\n  return iconPaths ? h(CustomIcon, { paths: iconPaths }) : null;\r\n};\r\n\r\n// icons\r\nconst QuestionIcon = createIcon('question');\r\nconst PlusIcon = createIcon('plus');\r\nconst PlayIcon = createIcon('play');\r\nconst PauseIcon = createIcon('pause');\r\nconst DeleteIcon = createIcon('delete');\r\nconst RefreshIcon = createIcon('refresh');\r\nconst CodeIcon = createIcon('code');\r\nconst DownloadIcon = createIcon('download');\r\nconst UploadIcon = createIcon('upload');\r\nconst EditIcon = createIcon('edit');\r\n\r\nconst props = defineProps({\r\n  elements: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  isRunning: Boolean,\r\n  isStopped: Boolean,\r\n  selectedNode: Object,\r\n  selectedEdge: Object\r\n});\r\n\r\nconst emit = defineEmits([\r\n  'add-node', 'start-flow', 'stop-flow', 'continue-flow',\r\n  'reset-flow', 'update-node-label',\r\n  'delete-selected-edge', 'import-json'\r\n]);\r\n\r\nconst flowName = ref('my_flow');\r\nconst flowDescription = ref('My flow\\'s description');\r\nconst daguYaml = ref('');\r\nconst pipelineJson = ref('');\r\nconst showPipelineJson = ref(false);\r\nconst showDaguYaml = ref(false);\r\nconst showHints = ref(false);\r\n\r\nconst isGraphValid = computed(() => {\r\n  const visited = new Set<string>();\r\n  let currentNode: string | null = 'start';\r\n  \r\n  while (currentNode && currentNode !== 'end') {\r\n    if (visited.has(currentNode)) return false;\r\n    visited.add(currentNode);\r\n    \r\n    const edgesFromCurrent = getEdges.value.filter(e => e.source === currentNode);\r\n    if (edgesFromCurrent.length !== 1) return false;\r\n    \r\n    currentNode = edgesFromCurrent[0].target;\r\n  }\r\n  \r\n  return currentNode === 'end';\r\n});\r\n\r\nconst getNextNode = (nodeId: string): string | null => {\r\n  const edges = props.elements.filter((el: any) => el.source === nodeId && el.target) as Edge[];\r\n  return edges.length > 0 ? edges[0].target : null;\r\n};\r\n\r\nconst generateDAGUYaml = () => {\r\n  const steps = [];\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    \r\n    const node = props.elements.find(n => n.id === nextNode) as CustomNode;\r\n    if (node && !isProtectedNode(node.id)) {\r\n      const step: any = {\r\n        name: node.data.label,\r\n      };\r\n\r\n      // handle proc_get_request\r\n      if (node.data.label === 'proc_get_request') {\r\n        step.executor = {\r\n          type: 'http',\r\n          config: {\r\n            silent: true,\r\n            headers: node.data.headers\r\n          }\r\n        };\r\n        step.command = `GET ${node.data.url}`;\r\n        step.output = node.data.label.toUpperCase() + '_DATA';\r\n        \r\n        if (node.data.headers && node.data.headers.length > 0) {\r\n          step.executor.config.headers = node.data.headers.reduce((acc: Record<string, string>, header: string) => {\r\n            const [key, value] = header.split(':').map(s => s.trim());\r\n            if (key && value) acc[key] = value;\r\n            return acc;\r\n          }, {});\r\n        }\r\n      } \r\n      // handle proc_json_filter\r\n      else if (node.data.label === 'proc_json_filter') {\r\n        step.executor = 'command';\r\n        \r\n        // generate the Node.js filter code\r\n        let filterCode = `\r\nconst input = JSON.parse(process.env.${getPreviousNodeOutputName(node.id)});\r\nconst result = ${node.data.list || 'input'}.filter(item => {\r\n  return ${generateNodeFilterConditions(node.data.conditions || [])};\r\n});\r\n${node.data.output_fields?.length > 0 ? \r\n  `console.log(JSON.stringify(result.map(item => (${generateOutputFields(node.data.output_fields)}))));` : \r\n  'console.log(JSON.stringify(result));'}\r\n`;\r\n        \r\n        step.command = `node -e \"${filterCode.replace(/\"/g, '\\\\\"').replace(/\\n/g, '')}\"`;\r\n        step.output = 'FILTERED_DATA';\r\n      }\r\n      // handle other node types\r\n      else {\r\n        step.command = node.data.command || '';\r\n      }\r\n      \r\n      steps.push(step);\r\n    }\r\n    currentNode = nextNode;\r\n  }\r\n  \r\n  const daguConfig = {\r\n    name: flowName.value,\r\n    description: flowDescription.value,\r\n    steps: steps\r\n  };\r\n  \r\n  daguYaml.value = YAML.stringify(daguConfig);\r\n};\r\n\r\n\r\n// helper function to get previous node's output name\r\nconst getPreviousNodeOutputName = (nodeId: string) => {\r\n  const edges = getEdges.value;\r\n  const edge = edges.find(e => e.target === nodeId);\r\n  if (!edge) return '';\r\n\r\n  const prevNode = props.elements.find(n => n.id === edge.source) as CustomNode;\r\n  return prevNode ? `${prevNode.data.label.toUpperCase()}_DATA` : '';\r\n};\r\n\r\n// helper function to generate filter conditions for Node.js\r\nconst generateNodeFilterConditions = (conditions: any[]) => {\r\n  return conditions\r\n    .filter(cond => cond.field && cond.operator && cond.value !== undefined)\r\n    .map(cond => {\r\n      const fieldPath = cond.field.includes('.') \r\n        ? cond.field.split('.').join('?.') \r\n        : `item?.${cond.field}`;\r\n      \r\n      let value = cond.value;\r\n      if (typeof value === 'string' && !['true', 'false'].includes(value) && isNaN(Number(value))) {\r\n        value = `'${value.replace(/'/g, \"\\\\'\")}'`;\r\n      }\r\n\r\n      switch(cond.operator) {\r\n        case '==': return `${fieldPath} == ${value}`;\r\n        case '!=': return `${fieldPath} != ${value}`;\r\n        case 'contains': \r\n          return typeof value === 'string' \r\n            ? `${fieldPath}?.includes(${value})`\r\n            : `${fieldPath}?.includes(${value})`;\r\n        default: return `${fieldPath} ${cond.operator} ${value}`;\r\n      }\r\n    })\r\n    .join(' && ') || 'true'; // default to true if no conditions\r\n};\r\n\r\n// helper function to generate output fields mapping\r\nconst generateOutputFields = (fields: string[]) => {\r\n  return `{\r\n    ${fields.map(field => `'${field}': item?.${field}`).join(',\\n    ')}\r\n  }`;\r\n};\r\n\r\nconst generatePipelineJson = () => {\r\n  const steps = [];\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    \r\n    const node = props.elements.find(n => n.id === nextNode) as CustomNode;\r\n    if (node && !isProtectedNode(node.id)) {\r\n      const step: any = {\r\n        name: node.data.label,\r\n        command: node.data.command || '',\r\n      };\r\n\r\n      const allParams = Object.keys(node.data)\r\n        .filter(key => !['label', 'command', 'processFunction'].includes(key))\r\n        .reduce((acc, key) => {\r\n          acc[key] = node.data[key];\r\n          return acc;\r\n        }, {} as Record<string, any>);\r\n      \r\n      if (Object.keys(allParams).length > 0) {\r\n        step.params = allParams;\r\n      }\r\n      \r\n      steps.push(step);\r\n    }\r\n    currentNode = nextNode;\r\n  }\r\n  \r\n  const pipelineConfig = {\r\n    name: flowName.value,\r\n    description: flowDescription.value,\r\n    steps: steps\r\n  };\r\n  \r\n  pipelineJson.value = JSON.stringify(pipelineConfig, null, 2);\r\n};\r\n\r\nconst downloadDAGUYaml = () => {\r\n  if (!daguYaml.value) return;\r\n  \r\n  const blob = new Blob([daguYaml.value], { type: 'application/yaml' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `${flowName.value}.yaml`.replace(/\\s+/g, '_');\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\nconst downloadPipelineJson = () => {\r\n  if (!pipelineJson.value) return;\r\n  \r\n  const blob = new Blob([pipelineJson.value], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `${flowName.value}.json`.replace(/\\s+/g, '_');\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\n\r\n// functions of import\r\nconst triggerFileInput = () => {\r\n  fileInput.value?.click();\r\n};\r\n\r\nconst handleFileSelect = async (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  if (!input.files || input.files.length === 0) return;\r\n\r\n  const file = input.files[0];\r\n  if (!file) return;\r\n\r\n  try {\r\n    const content = await readFileAsText(file);\r\n    const jsonConfig = JSON.parse(content);\r\n    \r\n    if (!jsonConfig || typeof jsonConfig !== 'object') {\r\n      throw new Error('Invalid JSON format');\r\n    }\r\n    \r\n    flowName.value = jsonConfig.name || 'imported_flow';\r\n    flowDescription.value = jsonConfig.description || '';\r\n    \r\n    emit('import-json', jsonConfig);\r\n    message.success('Flow импортирован успешно');\r\n  } catch (error) {\r\n    message.error(`Import failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    console.error('Import error:', error);\r\n  } finally {\r\n    if (input) input.value = '';\r\n  }\r\n};\r\n\r\nconst readFileAsText = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => resolve(reader.result as string);\r\n    reader.onerror = () => reject(new Error('File reading failed'));\r\n    reader.readAsText(file);\r\n  });\r\n};\r\n\r\n/*\r\nconst handleJsonImport = async (options: { file: File } | FileList | null) => {\r\n  try {\r\n    // Обрабатываем разные варианты входных данных\r\n    let file: File | null = null;\r\n    \r\n    if (options instanceof FileList) {\r\n      file = options[0];\r\n    } else if (options && 'file' in options) {\r\n      file = options.file;\r\n    }\r\n\r\n    if (!file) {\r\n      throw new Error('Файл не выбран');\r\n    }\r\n\r\n    // Читаем содержимое файла\r\n    const fileContent = await readFile(file);\r\n    const jsonConfig = JSON.parse(fileContent);\r\n    \r\n    // Валидация структуры\r\n    if (!jsonConfig?.steps || !Array.isArray(jsonConfig.steps)) {\r\n      throw new Error('Некорректная структура JSON');\r\n    }\r\n    \r\n    // Обновляем название и описание\r\n    flowName.value = jsonConfig.name || 'imported_flow';\r\n    flowDescription.value = jsonConfig.description || '';\r\n    \r\n    // Передаем конфиг в FlowBuilder\r\n    emit('import-json', jsonConfig);\r\n    \r\n    message.success('Граф успешно импортирован');\r\n  } catch (error) {\r\n    console.error('Ошибка импорта:', error);\r\n    message.error(`Ошибка импорта: ${error instanceof Error ? error.message : 'Неизвестная ошибка'}`);\r\n  }\r\n};\r\n\r\nconst readFile = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => resolve(e.target?.result as string);\r\n    reader.onerror = (e) => reject(new Error('Ошибка чтения файла: ' + e));\r\n    reader.readAsText(file);\r\n  });\r\n};\r\n*/ \r\n\r\nconst isProtectedNode = (nodeId: string) => {\r\n  return nodeId === 'start' || nodeId === 'end';\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tool-panel {\r\n  background-color: #0f0101;\r\n  color: white;\r\n  padding: 5px 0;\r\n  border-radius: 8px;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.settings-cards {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 10px;\r\n  padding: 0 10px;\r\n}\r\n\r\n.settings-cards > * {\r\n  flex: 1;\r\n}\r\n</style>","import script from \"./ToolPanel.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ToolPanel.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ToolPanel.vue?vue&type=style&index=0&id=22c38c89&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-22c38c89\"]])\n\nexport default __exports__","export type NodeParamType = 'string' | 'number' | 'boolean' | 'array';\r\n\r\nexport interface NodeParamItemConfig {\r\n  type: 'string' | 'number' | 'boolean';\r\n}\r\n\r\nexport interface NodeParamConfig {\r\n  name: string;\r\n  type: NodeParamType;\r\n  required?: boolean;\r\n  default?: any;\r\n  enum?: string[];\r\n  item?: NodeParamItemConfig;\r\n}\r\n\r\nexport interface NodeConfig {\r\n  name: string;\r\n  params: NodeParamConfig[];\r\n}\r\n\r\nexport interface NodesConfig {\r\n  [category: string]: NodeConfig[];\r\n}\r\n\r\nimport nodesConfigJson from './nodes_config.json';\r\n\r\nconst validateConfig = (config: unknown): NodesConfig => {\r\n  return config as NodesConfig;\r\n};\r\n\r\nconst config: NodesConfig = validateConfig(nodesConfigJson);\r\n\r\nexport default config;","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { style: {\"display\":\"flex\",\"justify-content\":\"flex-end\",\"margin-top\":\"20px\"} }\n\nimport { ref, watch, computed } from 'vue';\r\nimport { \r\n  NInput, NButton, NCard, NForm, NFormItem, \r\n  NSelect, NSwitch, NInputNumber, NDynamicTags, NTag, NSpace\r\n} from 'naive-ui';\r\nimport nodesConfig from '@/types/nodesConfig';\r\nimport { useMessage } from 'naive-ui';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'NodeContextMenu',\n  props: {\r\n  node: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  visible: Boolean,\r\n  x: Number,\r\n  y: Number\r\n},\n  emits: [\r\n  'update:visible', \r\n  'update-label', \r\n  'update-command',\r\n  'update-params'\r\n],\n  setup(__props, { emit: __emit }) {\n\r\nconst message = useMessage();\r\n\r\nconst props = __props;\r\n\r\nconst emit = __emit;\r\n\r\nconst localLabel = ref('');\r\nconst localParams = ref<Record<string, any>>({\r\n  conditions: [],\r\n  output_fields: []\r\n});\r\n\r\nconst newCondition = ref({\r\n  field: '',\r\n  operator: '==',\r\n  value: ''\r\n});\r\n\r\nconst operatorOptions = [\r\n  { label: '=', value: '==' },\r\n  { label: '≠', value: '!=' },\r\n  { label: '>', value: '>' },\r\n  { label: '<', value: '<' },\r\n  { label: '≥', value: '>=' },\r\n  { label: '≤', value: '<=' },\r\n  { label: 'содержит', value: 'contains' },\r\n];\r\n\r\nconst currentParams = computed(() => {\r\n  if (!props.node?.data?.label) return [];\r\n\r\n  for (const category of Object.values(nodesConfig)) {\r\n    const nodeConfig = category.find(n => props.node.data.label.includes(n.name));\r\n    if (nodeConfig) {\r\n      return nodeConfig.params || [];\r\n    }\r\n  }\r\n  return [];\r\n});\r\n\r\nwatch(() => props.node, (newNode) => {\r\n  if (newNode?.data) {\r\n    localLabel.value = newNode.data.label;\r\n    localParams.value = {\r\n      conditions: [],\r\n      output_fields: []\r\n    };\r\n    \r\n    currentParams.value.forEach(param => {\r\n      if (param.name === 'conditions') {\r\n        localParams.value.conditions = Array.isArray(newNode.data[param.name]) \r\n          ? [...newNode.data[param.name]]\r\n          : [];\r\n      } \r\n      else if (param.name === 'output_fields') {\r\n        localParams.value.output_fields = Array.isArray(newNode.data[param.name]) \r\n          ? [...newNode.data[param.name]]\r\n          : [];\r\n      }\r\n      else {\r\n        localParams.value[param.name] = newNode.data[param.name] !== undefined \r\n          ? newNode.data[param.name] \r\n          : param.default;\r\n      }\r\n    });\r\n  }\r\n}, { immediate: true, deep: true });\r\n\r\nconst addCondition = () => {\r\n  if (!newCondition.value.field) {\r\n    message.error('Поле не может быть пустым');\r\n    return;\r\n  }\r\n  \r\n  localParams.value.conditions.push({ ...newCondition.value });\r\n  newCondition.value = { field: '', operator: '==', value: '' };\r\n};\r\n\r\nconst removeCondition = (index: number) => {\r\n  localParams.value.conditions.splice(index, 1);\r\n};\r\n\r\nconst saveAndClose = () => {\r\n  emit('update-label', localLabel.value);\r\n  emit('update-params', { \r\n    ...localParams.value,\r\n    conditions: localParams.value.conditions.filter(\r\n      cond => cond.field && cond.value !== undefined\r\n    )\r\n  });\r\n  emit('update:visible', false);\r\n};\r\n\r\nconst positionStyle = computed(() => ({\r\n  left: `${props.x}px`,\r\n  top: `${props.y}px`,\r\n  position: 'absolute',\r\n  zIndex: 1000\r\n}));\r\n\r\nconst updateLabel = () => {\r\n  emit('update-label', localLabel.value);\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"node-context-menu\",\n        style: _normalizeStyle(positionStyle.value)\n      }, [\n        _createVNode(_unref(NCard), {\n          title: \"Редактирование шага\",\n          size: \"small\",\n          style: {\"width\":\"350px\"}\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(NForm), null, {\n              default: _withCtx(() => [\n                _createVNode(_unref(NFormItem), { label: \"Название шага\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(NInput), {\n                      value: localLabel.value,\n                      \"onUpdate:value\": _cache[0] || (_cache[0] = ($event: any) => ((localLabel).value = $event)),\n                      onBlur: updateLabel\n                    }, null, 8, [\"value\"])\n                  ]),\n                  _: 1\n                }),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(currentParams.value, (param) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: param.name\n                  }, [\n                    (param.name === 'list' && __props.node.data.label === 'proc_json_filter')\n                      ? (_openBlock(), _createBlock(_unref(NFormItem), {\n                          key: 0,\n                          label: \"Путь к массиву\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_unref(NInput), {\n                              value: localParams.value[param.name],\n                              \"onUpdate:value\": ($event: any) => ((localParams.value[param.name]) = $event),\n                              placeholder: \"Например: .users\"\n                            }, null, 8, [\"value\", \"onUpdate:value\"])\n                          ]),\n                          _: 2\n                        }, 1024))\n                      : (param.name === 'conditions' && __props.node.data.label === 'proc_json_filter')\n                        ? (_openBlock(), _createBlock(_unref(NFormItem), {\n                            key: 1,\n                            label: \"Условия фильтрации\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_unref(NSpace), { vertical: \"\" }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_unref(NSpace), { wrap: \"\" }, {\n                                    default: _withCtx(() => [\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(localParams.value.conditions, (cond, index) => {\n                                        return (_openBlock(), _createBlock(_unref(NTag), {\n                                          key: index,\n                                          closable: \"\",\n                                          onClose: ($event: any) => (removeCondition(index)),\n                                          type: \"info\"\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createTextVNode(_toDisplayString(cond.field) + \" \" + _toDisplayString(cond.operator) + \" \" + _toDisplayString(cond.value), 1)\n                                          ]),\n                                          _: 2\n                                        }, 1032, [\"onClose\"]))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }),\n                                  _createVNode(_unref(NSpace), null, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_unref(NInput), {\n                                        value: newCondition.value.field,\n                                        \"onUpdate:value\": _cache[1] || (_cache[1] = ($event: any) => ((newCondition.value.field) = $event)),\n                                        placeholder: \"Поле\",\n                                        style: {\"width\":\"100px\"}\n                                      }, null, 8, [\"value\"]),\n                                      _createVNode(_unref(NSelect), {\n                                        value: newCondition.value.operator,\n                                        \"onUpdate:value\": _cache[2] || (_cache[2] = ($event: any) => ((newCondition.value.operator) = $event)),\n                                        options: operatorOptions,\n                                        style: {\"width\":\"100px\"}\n                                      }, null, 8, [\"value\"]),\n                                      _createVNode(_unref(NInput), {\n                                        value: newCondition.value.value,\n                                        \"onUpdate:value\": _cache[3] || (_cache[3] = ($event: any) => ((newCondition.value.value) = $event)),\n                                        placeholder: \"Значение\",\n                                        style: {\"width\":\"100px\"}\n                                      }, null, 8, [\"value\"]),\n                                      _createVNode(_unref(NButton), {\n                                        onClick: addCondition,\n                                        type: \"primary\",\n                                        size: \"small\"\n                                      }, {\n                                        default: _withCtx(() => _cache[5] || (_cache[5] = [\n                                          _createTextVNode(\" Добавить \")\n                                        ])),\n                                        _: 1,\n                                        __: [5]\n                                      })\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            _: 1\n                          }))\n                        : (param.name === 'output_fields' && __props.node.data.label === 'proc_json_filter')\n                          ? (_openBlock(), _createBlock(_unref(NFormItem), {\n                              key: 2,\n                              label: \"Выводимые поля\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_unref(NDynamicTags), {\n                                  value: localParams.value.output_fields,\n                                  \"onUpdate:value\": _cache[4] || (_cache[4] = ($event: any) => ((localParams.value.output_fields) = $event))\n                                }, null, 8, [\"value\"])\n                              ]),\n                              _: 1\n                            }))\n                          : (_openBlock(), _createBlock(_unref(NFormItem), {\n                              key: 3,\n                              label: param.name\n                            }, {\n                              default: _withCtx(() => [\n                                (param.type === 'string' && !param.enum)\n                                  ? (_openBlock(), _createBlock(_unref(NInput), {\n                                      key: 0,\n                                      value: localParams.value[param.name],\n                                      \"onUpdate:value\": ($event: any) => ((localParams.value[param.name]) = $event),\n                                      placeholder: param.required ? 'Обязательное поле' : ''\n                                    }, null, 8, [\"value\", \"onUpdate:value\", \"placeholder\"]))\n                                  : (param.type === 'string' && param.enum)\n                                    ? (_openBlock(), _createBlock(_unref(NSelect), {\n                                        key: 1,\n                                        value: localParams.value[param.name],\n                                        \"onUpdate:value\": ($event: any) => ((localParams.value[param.name]) = $event),\n                                        options: param.enum.map(e => ({ label: e, value: e }))\n                                      }, null, 8, [\"value\", \"onUpdate:value\", \"options\"]))\n                                    : (param.type === 'number')\n                                      ? (_openBlock(), _createBlock(_unref(NInputNumber), {\n                                          key: 2,\n                                          value: localParams.value[param.name],\n                                          \"onUpdate:value\": ($event: any) => ((localParams.value[param.name]) = $event)\n                                        }, null, 8, [\"value\", \"onUpdate:value\"]))\n                                      : (param.type === 'boolean')\n                                        ? (_openBlock(), _createBlock(_unref(NSwitch), {\n                                            key: 3,\n                                            value: localParams.value[param.name],\n                                            \"onUpdate:value\": ($event: any) => ((localParams.value[param.name]) = $event)\n                                          }, null, 8, [\"value\", \"onUpdate:value\"]))\n                                        : (param.type === 'array' && param.item?.type === 'string')\n                                          ? (_openBlock(), _createBlock(_unref(NDynamicTags), {\n                                              key: 4,\n                                              value: localParams.value[param.name],\n                                              \"onUpdate:value\": ($event: any) => ((localParams.value[param.name]) = $event)\n                                            }, null, 8, [\"value\", \"onUpdate:value\"]))\n                                          : _createCommentVNode(\"\", true)\n                              ]),\n                              _: 2\n                            }, 1032, [\"label\"]))\n                  ], 64))\n                }), 128)),\n                _createElementVNode(\"div\", _hoisted_1, [\n                  _createVNode(_unref(NButton), {\n                    onClick: saveAndClose,\n                    type: \"primary\"\n                  }, {\n                    default: _withCtx(() => _cache[6] || (_cache[6] = [\n                      _createTextVNode(\"Сохранить\")\n                    ])),\n                    _: 1,\n                    __: [6]\n                  })\n                ])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ], 4))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n  <div v-if=\"visible\" class=\"node-context-menu\" :style=\"positionStyle\">\r\n    <n-card title=\"Редактирование шага\" size=\"small\" style=\"width: 350px\">\r\n      <n-form>\r\n        <n-form-item label=\"Название шага\">\r\n          <n-input v-model:value=\"localLabel\" @blur=\"updateLabel\" />\r\n        </n-form-item>\r\n        \r\n        <!-- General Params -->\r\n        <template v-for=\"param in currentParams\" :key=\"param.name\">\r\n          <!-- Param 'list' for json_filter -->\r\n          <n-form-item v-if=\"param.name === 'list' && node.data.label === 'proc_json_filter'\" label=\"Путь к массиву\">\r\n            <n-input\r\n              v-model:value=\"localParams[param.name]\"\r\n              placeholder=\"Например: .users\"\r\n            />\r\n          </n-form-item>\r\n          \r\n          <!-- Filter Conditions -->\r\n          <n-form-item v-else-if=\"param.name === 'conditions' && node.data.label === 'proc_json_filter'\" label=\"Условия фильтрации\">\r\n            <!-- Display conditions as tags -->\r\n            <n-space vertical>\r\n              <n-space wrap>\r\n                <n-tag\r\n                  v-for=\"(cond, index) in localParams.conditions\"\r\n                  :key=\"index\"\r\n                  closable\r\n                  @close=\"removeCondition(index)\"\r\n                  type=\"info\"\r\n                >\r\n                  {{ cond.field }} {{ cond.operator }} {{ cond.value }}\r\n                </n-tag>\r\n              </n-space>\r\n              \r\n              <!-- Input for new condition -->\r\n              <n-space>\r\n                <n-input\r\n                  v-model:value=\"newCondition.field\"\r\n                  placeholder=\"Поле\"\r\n                  style=\"width: 100px\"\r\n                />\r\n                <n-select\r\n                  v-model:value=\"newCondition.operator\"\r\n                  :options=\"operatorOptions\"\r\n                  style=\"width: 100px\"\r\n                />\r\n                <n-input\r\n                  v-model:value=\"newCondition.value\"\r\n                  placeholder=\"Значение\"\r\n                  style=\"width: 100px\"\r\n                />\r\n                <n-button\r\n                  @click=\"addCondition\"\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                >\r\n                  Добавить\r\n                </n-button>\r\n              </n-space>\r\n            </n-space>\r\n          </n-form-item>\r\n\r\n          <!-- Output Fields -->\r\n          <n-form-item v-else-if=\"param.name === 'output_fields' && node.data.label === 'proc_json_filter'\" label=\"Выводимые поля\">\r\n            <n-dynamic-tags v-model:value=\"localParams.output_fields\" />\r\n          </n-form-item>\r\n\r\n          <!-- Other Params -->\r\n          <n-form-item v-else :label=\"param.name\">\r\n            <n-input\r\n              v-if=\"param.type === 'string' && !param.enum\"\r\n              v-model:value=\"localParams[param.name]\"\r\n              :placeholder=\"param.required ? 'Обязательное поле' : ''\"\r\n            />\r\n            <n-select\r\n              v-else-if=\"param.type === 'string' && param.enum\"\r\n              v-model:value=\"localParams[param.name]\"\r\n              :options=\"param.enum.map(e => ({ label: e, value: e }))\"\r\n            />\r\n            <n-input-number\r\n              v-else-if=\"param.type === 'number'\"\r\n              v-model:value=\"localParams[param.name]\"\r\n            />\r\n            <n-switch\r\n              v-else-if=\"param.type === 'boolean'\"\r\n              v-model:value=\"localParams[param.name]\"\r\n            />\r\n            <n-dynamic-tags\r\n              v-else-if=\"param.type === 'array' && param.item?.type === 'string'\"\r\n              v-model:value=\"localParams[param.name]\"\r\n            />\r\n          </n-form-item>\r\n        </template>\r\n\r\n        <div style=\"display: flex; justify-content: flex-end; margin-top: 20px\">\r\n          <n-button @click=\"saveAndClose\" type=\"primary\">Сохранить</n-button>\r\n        </div>\r\n      </n-form>\r\n    </n-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch, computed, defineProps, defineEmits } from 'vue';\r\nimport { \r\n  NInput, NButton, NCard, NForm, NFormItem, \r\n  NSelect, NSwitch, NInputNumber, NDynamicTags, NTag, NSpace\r\n} from 'naive-ui';\r\nimport nodesConfig from '@/types/nodesConfig';\r\nimport { useMessage } from 'naive-ui';\r\n\r\nconst message = useMessage();\r\n\r\nconst props = defineProps({\r\n  node: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  visible: Boolean,\r\n  x: Number,\r\n  y: Number\r\n});\r\n\r\nconst emit = defineEmits([\r\n  'update:visible', \r\n  'update-label', \r\n  'update-command',\r\n  'update-params'\r\n]);\r\n\r\nconst localLabel = ref('');\r\nconst localParams = ref<Record<string, any>>({\r\n  conditions: [],\r\n  output_fields: []\r\n});\r\n\r\nconst newCondition = ref({\r\n  field: '',\r\n  operator: '==',\r\n  value: ''\r\n});\r\n\r\nconst operatorOptions = [\r\n  { label: '=', value: '==' },\r\n  { label: '≠', value: '!=' },\r\n  { label: '>', value: '>' },\r\n  { label: '<', value: '<' },\r\n  { label: '≥', value: '>=' },\r\n  { label: '≤', value: '<=' },\r\n  { label: 'содержит', value: 'contains' },\r\n];\r\n\r\nconst currentParams = computed(() => {\r\n  if (!props.node?.data?.label) return [];\r\n\r\n  for (const category of Object.values(nodesConfig)) {\r\n    const nodeConfig = category.find(n => props.node.data.label.includes(n.name));\r\n    if (nodeConfig) {\r\n      return nodeConfig.params || [];\r\n    }\r\n  }\r\n  return [];\r\n});\r\n\r\nwatch(() => props.node, (newNode) => {\r\n  if (newNode?.data) {\r\n    localLabel.value = newNode.data.label;\r\n    localParams.value = {\r\n      conditions: [],\r\n      output_fields: []\r\n    };\r\n    \r\n    currentParams.value.forEach(param => {\r\n      if (param.name === 'conditions') {\r\n        localParams.value.conditions = Array.isArray(newNode.data[param.name]) \r\n          ? [...newNode.data[param.name]]\r\n          : [];\r\n      } \r\n      else if (param.name === 'output_fields') {\r\n        localParams.value.output_fields = Array.isArray(newNode.data[param.name]) \r\n          ? [...newNode.data[param.name]]\r\n          : [];\r\n      }\r\n      else {\r\n        localParams.value[param.name] = newNode.data[param.name] !== undefined \r\n          ? newNode.data[param.name] \r\n          : param.default;\r\n      }\r\n    });\r\n  }\r\n}, { immediate: true, deep: true });\r\n\r\nconst addCondition = () => {\r\n  if (!newCondition.value.field) {\r\n    message.error('Поле не может быть пустым');\r\n    return;\r\n  }\r\n  \r\n  localParams.value.conditions.push({ ...newCondition.value });\r\n  newCondition.value = { field: '', operator: '==', value: '' };\r\n};\r\n\r\nconst removeCondition = (index: number) => {\r\n  localParams.value.conditions.splice(index, 1);\r\n};\r\n\r\nconst saveAndClose = () => {\r\n  emit('update-label', localLabel.value);\r\n  emit('update-params', { \r\n    ...localParams.value,\r\n    conditions: localParams.value.conditions.filter(\r\n      cond => cond.field && cond.value !== undefined\r\n    )\r\n  });\r\n  emit('update:visible', false);\r\n};\r\n\r\nconst positionStyle = computed(() => ({\r\n  left: `${props.x}px`,\r\n  top: `${props.y}px`,\r\n  position: 'absolute',\r\n  zIndex: 1000\r\n}));\r\n\r\nconst updateLabel = () => {\r\n  emit('update-label', localLabel.value);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.node-context-menu {\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n.n-form-item {\r\n  margin-bottom: 16px;\r\n}\r\n</style>","import script from \"./NodeContextMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./NodeContextMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./NodeContextMenu.vue?vue&type=style&index=0&id=42c00bc0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-42c00bc0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { computed } from 'vue';\r\nimport { NDropdown } from 'naive-ui';\r\nimport nodesConfig from '../types/nodesConfig'\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'NodeSelectionMenu',\n  props: {\r\n  show: Boolean,\r\n  position: {\r\n    type: Object,\r\n    default: () => ({ x: 0, y: 0 })\r\n  }\r\n},\n  emits: ['select', 'update:show'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst emit = __emit;\r\n\r\nconst showMenu = computed({\r\n  get: () => props.show,\r\n  set: (value) => emit('update:show', value)\r\n});\r\n\r\nconst nodeOptions = computed(() => {\r\n  const options = [];\r\n  \r\n  for (const [section, nodes] of Object.entries(nodesConfig)) {\r\n    options.push({\r\n      type: 'group',\r\n      label: section.toUpperCase(),\r\n      key: section,\r\n      children: nodes.map(node => ({\r\n        label: `${section}_${node.name}`,\r\n        key: `${section}_${node.name}`,\r\n        nodeData: node\r\n      }))\r\n    });\r\n  }\r\n  \r\n  return options;\r\n});\r\n\r\nconst handleNodeSelect = (key: string, option: any) => {\r\n  emit('select', {\r\n    label: key,\r\n    params: option.nodeData.params\r\n  });\r\n  showMenu.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(NDropdown), {\n    show: showMenu.value,\n    \"onUpdate:show\": _cache[0] || (_cache[0] = ($event: any) => ((showMenu).value = $event)),\n    options: nodeOptions.value,\n    x: __props.position.x,\n    y: __props.position.y,\n    placement: \"bottom-start\",\n    trigger: \"manual\",\n    onSelect: handleNodeSelect\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [\n      _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"left\":\"-9999px\"} }, null, -1)\n    ])),\n    _: 1,\n    __: [1]\n  }, 8, [\"show\", \"options\", \"x\", \"y\"]))\n}\n}\n\n})","<template>\r\n  <n-dropdown\r\n    v-model:show=\"showMenu\"\r\n    :options=\"nodeOptions\"\r\n    :x=\"position.x\"\r\n    :y=\"position.y\"\r\n    placement=\"bottom-start\"\r\n    trigger=\"manual\"\r\n    @select=\"handleNodeSelect\"\r\n  >\r\n    <div style=\"position: absolute; left: -9999px\"></div>\r\n  </n-dropdown>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineProps, defineEmits } from 'vue';\r\nimport { NDropdown } from 'naive-ui';\r\nimport nodesConfig from '../types/nodesConfig'\r\n\r\nconst props = defineProps({\r\n  show: Boolean,\r\n  position: {\r\n    type: Object,\r\n    default: () => ({ x: 0, y: 0 })\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['select', 'update:show']);\r\n\r\nconst showMenu = computed({\r\n  get: () => props.show,\r\n  set: (value) => emit('update:show', value)\r\n});\r\n\r\nconst nodeOptions = computed(() => {\r\n  const options = [];\r\n  \r\n  for (const [section, nodes] of Object.entries(nodesConfig)) {\r\n    options.push({\r\n      type: 'group',\r\n      label: section.toUpperCase(),\r\n      key: section,\r\n      children: nodes.map(node => ({\r\n        label: `${section}_${node.name}`,\r\n        key: `${section}_${node.name}`,\r\n        nodeData: node\r\n      }))\r\n    });\r\n  }\r\n  \r\n  return options;\r\n});\r\n\r\nconst handleNodeSelect = (key: string, option: any) => {\r\n  emit('select', {\r\n    label: key,\r\n    params: option.nodeData.params\r\n  });\r\n  showMenu.value = false;\r\n};\r\n</script>","import script from \"./NodeSelectionMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./NodeSelectionMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref, computed, onMounted, nextTick } from 'vue';\r\nimport { VueFlow, Position, useVueFlow, addEdge, Edge } from '@vue-flow/core';\r\nimport '@vue-flow/core/dist/style.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { NLayoutContent } from 'naive-ui';\r\n\r\nimport ToolPanel from './ToolPanel.vue';\r\nimport NodeContextMenu from './NodeContextMenu.vue';\r\nimport NodeSelectionMenu from './NodeSelectionMenu.vue';\r\nimport CustomNode from '../types';\r\n// import config from '../types/nodesConfig';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'FlowBuilder',\n  setup(__props) {\n\r\nconst elements = ref<Array<CustomNode | Edge>>([\r\n  { \r\n    id: 'start', \r\n    type: 'input', \r\n    data: { label: 'start', processFunction: async () => { console.log('start'); await delay(1000); } }, \r\n    position: { x: 50, y: 50 },\r\n    sourcePosition: Position.Bottom,\r\n    style: { \r\n      backgroundColor: '#d0d0d0', \r\n      color: 'black',\r\n      borderRadius: '10px',\r\n      width: '120px',\r\n      height: '60px'\r\n    },\r\n    draggable: true,\r\n    selectable: true,\r\n    deletable: false\r\n  },\r\n  { \r\n    id: 'end', \r\n    type: 'output', \r\n    data: { label: 'end', processFunction: async () => { console.log('end'); await delay(1000); } }, \r\n    position: { x: 500, y: 400 },\r\n    sourcePosition: Position.Top,\r\n    style: { \r\n      backgroundColor: '#454545', \r\n      color: 'white',\r\n      borderRadius: '10px',\r\n      width: '120px',\r\n      height: '60px'\r\n    },\r\n    draggable: true,\r\n    selectable: true,\r\n    deletable: false\r\n  },\r\n]);\r\n\r\nconst { \r\n  removeEdges, \r\n  addNodes, \r\n  updateNode, \r\n  removeNodes,\r\n  getEdges,\r\n  setNodes,\r\n  setEdges,\r\n  fitView\r\n} = useVueFlow();\r\n\r\nconst isRunning = ref(false);\r\nconst isStopped = ref(false);\r\nconst currentStep = ref<string | null>(null);\r\nconst selectedNode = ref<CustomNode | null>(null);\r\nconst selectedEdge = ref<Edge | null>(null);\r\nconst connectionMode = ref(false);\r\nconst flowWrapper = ref<HTMLElement | null>(null);\r\n\r\nconst contextMenuNode = ref<CustomNode | null>(null);\r\nconst showContextMenu = ref(false);\r\nconst contextMenuPosition = ref({ x: 0, y: 0 });\r\n\r\nconst showNodeMenu = ref(false);\r\nconst nodeMenuPosition = ref({ x: 0, y: 0 });\r\n\r\nconst stepCount = computed(() => {\r\n  let count = 0;\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    count++;\r\n    currentNode = nextNode;\r\n  }\r\n  \r\n  return count;\r\n});\r\n\r\nconst delay = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\nconst isProtectedNode = (nodeId: string) => {\r\n  return nodeId === 'start' || nodeId === 'end';\r\n};\r\n\r\nconst nodeClass = (node: CustomNode) => {\r\n  if (node.type === 'input') return 'input-node';\r\n  if (node.type === 'output') return 'output-node';\r\n  return 'default-node';\r\n};\r\n\r\nconst onPaneReady = ({ pane }: { pane?: HTMLElement }) => {\r\n  if (pane) {\r\n    pane.tabIndex = 0;\r\n    pane.focus();\r\n  }\r\n};\r\n\r\nconst handleKeyDown = (event: KeyboardEvent) => {\r\n  if ((event.ctrlKey || event.metaKey) && \r\n  (event.key === 'x' || event.key === 'ч')) {\r\n    event.preventDefault();\r\n    deleteSelectedNodeWithEdges();\r\n    deleteSelectedEdge();\r\n  }\r\n  if ((event.ctrlKey || event.metaKey) &&\r\n  (event.key === 'a' || event.key === 'ф')) {\r\n    event.preventDefault();\r\n    showNodeSelectionMenu();\r\n  }\r\n};\r\n\r\nconst deleteSelectedNodeWithEdges = () => {\r\n  if (!selectedNode.value || isProtectedNode(selectedNode.value.id)) {\r\n    console.warn('Нет выбранной ноды для удаления или нода защищена');\r\n    return;\r\n  }\r\n\r\n  const nodeId = selectedNode.value.id;\r\n  const edgesToRemove = getEdges.value.filter(\r\n    edge => edge.source === nodeId || edge.target === nodeId\r\n  );\r\n\r\n  if (edgesToRemove.length > 0) {\r\n    removeEdges(edgesToRemove);\r\n  }\r\n  \r\n  removeNodes([nodeId]);\r\n  elements.value = elements.value.filter(\r\n    el => el.id !== nodeId && \r\n    !edgesToRemove.some(edge => edge.id === el.id)\r\n  );\r\n  \r\n  selectedNode.value = null;\r\n  closeContextMenu();\r\n  updateStepNumbers();\r\n};\r\n\r\nconst showNodeSelectionMenu = (event?: MouseEvent) => {\r\n  if (event) {\r\n    nodeMenuPosition.value = {\r\n      x: event.clientX,\r\n      y: event.clientY\r\n    };\r\n  } else {\r\n    const centerX = window.innerWidth / 2;\r\n    const centerY = window.innerHeight / 2;\r\n    nodeMenuPosition.value = { x: centerX, y: centerY };\r\n  }\r\n  showNodeMenu.value = true;\r\n};\r\n\r\nconst addNode = (nodeData: { label: string, params: any[] }) => {\r\n  const newNodeId = uuidv4();\r\n  \r\n  const params = nodeData.params.reduce((acc, param) => {\r\n    acc[param.name] = param.default !== undefined ? param.default : '';\r\n    return acc;\r\n  }, {} as Record<string, any>);\r\n\r\n  const newNode: CustomNode = {\r\n    id: newNodeId,\r\n    data: { \r\n      label: nodeData.label,\r\n      ...params,\r\n      processFunction: async () => { \r\n        console.log(`Выполняется шаг ${newNodeId}`); \r\n        await delay(1000); \r\n      } \r\n    },\r\n    position: { x: 100 + stepCount.value * 100, y: 150 },\r\n    targetPosition: Position.Top,\r\n    sourcePosition: Position.Bottom,\r\n    style: { \r\n      backgroundColor: '#2196F3', \r\n      color: 'white',\r\n      borderRadius: '50%',\r\n      width: '80px',\r\n      height: '80px'\r\n    }\r\n  };\r\n\r\n  elements.value.push(newNode);\r\n  addNodes([newNode]);\r\n  showNodeMenu.value = false;\r\n};\r\n\r\nconst onConnect = (params: any) => {\r\n  const newEdge = {\r\n    id: `edge-${params.source}-${params.target}`,\r\n    source: params.source,\r\n    target: params.target,\r\n  };\r\n  elements.value = addEdge(newEdge, elements.value);\r\n  connectionMode.value = false;\r\n  updateStepNumbers();\r\n};\r\n\r\nconst onNodeClick = (event: any) => {\r\n  if (connectionMode.value) return;\r\n  if (isProtectedNode(event.node.id)) {\r\n    selectedNode.value = null;\r\n    selectedEdge.value = null;\r\n    closeContextMenu();\r\n    return;\r\n  }\r\n  selectedNode.value = event.node;\r\n  selectedEdge.value = null;\r\n  closeContextMenu();\r\n};\r\n\r\nconst onEdgeClick = (event: any) => {\r\n  selectedNode.value = null;\r\n  selectedEdge.value = event.edge;\r\n  closeContextMenu();\r\n};\r\n\r\nconst onUpdateEdge = (event: any, edge: Edge) => {\r\n  console.log('onUpdateEdge', edge);\r\n}\r\n\r\nconst onNodeContextMenu = (event: { event: MouseEvent, node: CustomNode }) => {\r\n  if (!event?.node || isProtectedNode(event.node.id)) return;\r\n  \r\n  event.event.preventDefault();\r\n  \r\n  selectedNode.value = event.node;\r\n  contextMenuNode.value = event.node;\r\n  \r\n  const flowWrapperRect = flowWrapper.value?.getBoundingClientRect();\r\n  if (!flowWrapperRect) return;\r\n  \r\n  contextMenuPosition.value = {\r\n    x: event.event.clientX - flowWrapperRect.left,\r\n    y: event.event.clientY - flowWrapperRect.top\r\n  };\r\n  \r\n  showContextMenu.value = true;\r\n};\r\n\r\nconst onPaneClick = () => {\r\n  closeContextMenu();\r\n};\r\n\r\nconst closeContextMenu = () => {\r\n  contextMenuNode.value = null;\r\n};\r\n\r\nconst updateNodeLabel = (newLabel: string) => {\r\n  if (selectedNode.value && !isProtectedNode(selectedNode.value.id)) {\r\n    const nodeIndex = elements.value.findIndex(el => el.id === selectedNode.value?.id);\r\n    if (nodeIndex !== -1) {\r\n      (elements.value[nodeIndex] as CustomNode).data.label = newLabel;\r\n      updateNode(selectedNode.value.id, elements.value[nodeIndex]);\r\n    }\r\n  }\r\n};\r\n\r\nconst updateNodeParams = (newParams: Record<string, any>) => {\r\n  if (selectedNode.value) {\r\n    const nodeIndex = elements.value.findIndex(el => el.id === selectedNode.value?.id);\r\n    if (nodeIndex !== -1) {\r\n      const node = { ...elements.value[nodeIndex] } as CustomNode;\r\n      \r\n      // update all parameters\r\n      Object.keys(newParams).forEach(key => {\r\n        node.data[key] = newParams[key];\r\n      });\r\n      \r\n      // update the node in the array of elements\r\n      elements.value[nodeIndex] = node;\r\n      \r\n      // update the node in VueFlow\r\n      updateNode(node.id, node);\r\n    }\r\n  }\r\n};\r\n\r\nconst deleteSelectedEdge = () => {\r\n  if (selectedEdge.value) {\r\n    removeEdges([selectedEdge.value]);\r\n    elements.value = elements.value.filter(el => el.id !== selectedEdge.value?.id);\r\n    selectedEdge.value = null;\r\n    updateStepNumbers();\r\n  }\r\n}\r\n\r\nconst updateStepNumbers = () => {\r\n  // let stepNumber = 1;\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    \r\n    const node = elements.value.find(n => n.id === nextNode) as CustomNode;\r\n    if (node && !isProtectedNode(node.id)) {\r\n      updateNode(node.id, node);\r\n      // stepNumber++;\r\n    }\r\n    \r\n    currentNode = nextNode;\r\n  }\r\n};\r\n\r\nconst importJsonConfig = (jsonConfig: any) => {\r\n  try {\r\n    // guard expression\r\n    if (!jsonConfig?.steps || !Array.isArray(jsonConfig.steps)) {\r\n      throw new Error('Invalid configuration: missing steps array');\r\n    }\r\n\r\n    const newNodes: CustomNode[] = [];\r\n    const newEdges: Edge[] = [];\r\n    let xPos = 50;\r\n    const yPos = 150;\r\n\r\n    // start node\r\n    newNodes.push({\r\n      id: 'start',\r\n      type: 'input',\r\n      data: { label: 'start', processFunction: async () => await delay(1000) },\r\n      position: { x: xPos, y: 50 },\r\n      sourcePosition: Position.Bottom,\r\n      style: { \r\n        backgroundColor: '#d0d0d0',\r\n        color: 'black',\r\n        borderRadius: '10px',\r\n        width: '120px',\r\n        height: '60px'\r\n      },\r\n      draggable: true,\r\n      selectable: true,\r\n      deletable: false\r\n    });\r\n    xPos += 200;\r\n\r\n    // steps processing\r\n    jsonConfig.steps.forEach((step: any) => {\r\n      const nodeId = uuidv4();\r\n      // const [nodeType, operationName] = step.name.split('_');\r\n      \r\n      const nodeData: any = {\r\n        label: step.name,\r\n        command: step.command || '',\r\n        processFunction: async () => await delay(1000)\r\n      };\r\n\r\n      // add all params from the step to nodeData\r\n      if (step.params) {\r\n        Object.keys(step.params).forEach(paramName => {\r\n          nodeData[paramName] = step.params[paramName];\r\n        });\r\n      }\r\n\r\n      // add node\r\n      newNodes.push({\r\n        id: nodeId,\r\n        data: nodeData,\r\n        position: { x: xPos, y: yPos },\r\n        targetPosition: Position.Top,\r\n        sourcePosition: Position.Bottom,\r\n        style: { \r\n          backgroundColor: '#2196F3',\r\n          color: 'white',\r\n          borderRadius: '50%',\r\n          width: '80px',\r\n          height: '80px'\r\n        },\r\n        draggable: true,\r\n        selectable: true,\r\n        deletable: true\r\n      });\r\n\r\n      // add edge\r\n      if (newNodes.length > 1) {\r\n        const prevNode = newNodes[newNodes.length-2];\r\n        newEdges.push({\r\n          id: `edge-${prevNode.id}-${nodeId}`,\r\n          source: prevNode.id,\r\n          target: nodeId,\r\n        });\r\n      }\r\n\r\n      xPos += 200;\r\n    });\r\n\r\n    // end node\r\n    newNodes.push({\r\n      id: 'end',\r\n      type: 'output',\r\n      data: { label: 'end', command: '', processFunction: async () => await delay(1000) },\r\n      position: { x: xPos, y: 50 },\r\n      sourcePosition: Position.Top,\r\n      style: { \r\n        backgroundColor: '#454545',\r\n        color: 'white',\r\n        borderRadius: '10px',\r\n        width: '120px',\r\n        height: '60px'\r\n      },\r\n      draggable: true,\r\n      selectable: true,\r\n      deletable: false\r\n    });\r\n\r\n    // linking the last node to end\r\n    if (newNodes.length > 2) {\r\n      const lastStepNode = newNodes[newNodes.length-2];\r\n      newEdges.push({\r\n        id: `edge-${lastStepNode.id}-end`,\r\n        source: lastStepNode.id,\r\n        target: 'end',\r\n      });\r\n    }\r\n\r\n    // graph update\r\n    elements.value = [...newNodes, ...newEdges];\r\n    setNodes(newNodes);\r\n    setEdges(newEdges);\r\n\r\n    // auto-scaling\r\n    nextTick(() => fitView({ padding: 0.5 }));\r\n\r\n  } catch (error) {\r\n    console.error('Graph import error:', error);\r\n  }\r\n};\r\n\r\nconst startFlow = async () => {\r\n  isRunning.value = true;\r\n  isStopped.value = false;\r\n  currentStep.value = 'start';\r\n\r\n  try {\r\n    await executeStep('start');\r\n    let nextNode = getNextNode('start');\r\n\r\n    while (nextNode && isRunning.value) {\r\n      currentStep.value = nextNode;\r\n      await executeStep(nextNode);\r\n      nextNode = getNextNode(nextNode);\r\n    }\r\n\r\n    if (isRunning.value) {\r\n      currentStep.value = 'end';\r\n      await executeStep('end');\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка выполнения графа:', error);\r\n  } finally {\r\n    isRunning.value = false;\r\n    currentStep.value = null;\r\n  }\r\n};\r\n\r\nconst stopFlow = () => {\r\n  isRunning.value = false;\r\n  isStopped.value = true;\r\n};\r\n\r\nconst continueFlow = async () => {\r\n  if (!currentStep.value) return;\r\n\r\n  isStopped.value = false;\r\n  isRunning.value = true;\r\n\r\n  try {\r\n    let nextNode = getNextNode(currentStep.value);\r\n\r\n    while (nextNode && isRunning.value) {\r\n      currentStep.value = nextNode;\r\n      await executeStep(nextNode);\r\n      nextNode = getNextNode(nextNode);\r\n    }\r\n\r\n    if (isRunning.value) {\r\n      currentStep.value = 'end';\r\n      await executeStep('end');\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка выполнения графа:', error);\r\n  } finally {\r\n    isRunning.value = false;\r\n    isStopped.value = false;\r\n    currentStep.value = null;\r\n  }\r\n};\r\n\r\nconst resetFlow = () => {\r\n  isRunning.value = false;\r\n  isStopped.value = false;\r\n  currentStep.value = null;\r\n};\r\n\r\nconst executeStep = async (nodeId: string) => {\r\n  const node = elements.value.find((el: any) => el.id === nodeId) as CustomNode;\r\n  if (node?.data?.processFunction) {\r\n    await node.data.processFunction();\r\n  }\r\n};\r\n\r\nconst getNextNode = (nodeId: string): string | null => {\r\n  const edges = elements.value.filter((el: any) => el.source === nodeId && el.target) as Edge[];\r\n  return edges.length > 0 ? edges[0].target : null;\r\n};\r\n\r\nonMounted(() => {\r\n  if (flowWrapper.value) {\r\n    flowWrapper.value.focus();\r\n  }\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"flow-container\",\n    tabindex: \"0\",\n    onKeydown: handleKeyDown\n  }, [\n    _createVNode(_unref(NLayoutContent), null, {\n      default: _withCtx(() => [\n        _createVNode(ToolPanel, {\n          elements: elements.value,\n          \"is-running\": isRunning.value,\n          \"is-stopped\": isStopped.value,\n          \"selected-node\": selectedNode.value,\n          \"selected-edge\": selectedEdge.value,\n          onAddNode: showNodeSelectionMenu,\n          onStartFlow: startFlow,\n          onStopFlow: stopFlow,\n          onContinueFlow: continueFlow,\n          onResetFlow: resetFlow,\n          onUpdateNodeLabel: updateNodeLabel,\n          onDeleteSelectedEdge: deleteSelectedEdge,\n          onImportJson: importJsonConfig\n        }, null, 8, [\"elements\", \"is-running\", \"is-stopped\", \"selected-node\", \"selected-edge\"]),\n        _createElementVNode(\"div\", {\n          class: \"flow-wrapper\",\n          ref_key: \"flowWrapper\",\n          ref: flowWrapper\n        }, [\n          _createVNode(_unref(VueFlow), {\n            modelValue: elements.value,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((elements).value = $event)),\n            style: { width: '100%', height: '88vh', background: '#fcfcfc' },\n            onNodeClick: onNodeClick,\n            onEdgeClick: onEdgeClick,\n            onUpdateEdge: onUpdateEdge,\n            onNodeContextMenu: onNodeContextMenu,\n            onPaneClick: onPaneClick,\n            \"connection-mode\": connectionMode.value,\n            onConnect: onConnect,\n            onPaneReady: onPaneReady,\n            \"node-class\": nodeClass\n          }, null, 8, [\"modelValue\", \"connection-mode\"]),\n          (showContextMenu.value && contextMenuNode.value)\n            ? (_openBlock(), _createBlock(NodeContextMenu, {\n                key: 0,\n                node: contextMenuNode.value,\n                visible: showContextMenu.value,\n                x: contextMenuPosition.value.x,\n                y: contextMenuPosition.value.y,\n                \"onUpdate:visible\": _cache[1] || (_cache[1] = ($event: any) => (showContextMenu.value = $event)),\n                onUpdateLabel: updateNodeLabel,\n                onUpdateCommand: _ctx.updateNodeCommand,\n                onUpdateParams: updateNodeParams\n              }, null, 8, [\"node\", \"visible\", \"x\", \"y\", \"onUpdateCommand\"]))\n            : _createCommentVNode(\"\", true),\n          (showNodeMenu.value)\n            ? (_openBlock(), _createBlock(NodeSelectionMenu, {\n                key: 1,\n                show: showNodeMenu.value,\n                position: nodeMenuPosition.value,\n                \"onUpdate:show\": _cache[2] || (_cache[2] = ($event: any) => (showNodeMenu.value = $event)),\n                onSelect: addNode\n              }, null, 8, [\"show\", \"position\"]))\n            : _createCommentVNode(\"\", true)\n        ], 512)\n      ]),\n      _: 1\n    })\n  ], 32))\n}\n}\n\n})","<template>\r\n  <div class=\"flow-container\" tabindex=\"0\" @keydown=\"handleKeyDown\">\r\n    <n-layout-content>\r\n      <ToolPanel\r\n        :elements=\"elements\"\r\n        :is-running=\"isRunning\"\r\n        :is-stopped=\"isStopped\"\r\n        :selected-node=\"selectedNode\"\r\n        :selected-edge=\"selectedEdge\"\r\n        @add-node=\"showNodeSelectionMenu\"\r\n        @start-flow=\"startFlow\"\r\n        @stop-flow=\"stopFlow\"\r\n        @continue-flow=\"continueFlow\"\r\n        @reset-flow=\"resetFlow\"\r\n        @update-node-label=\"updateNodeLabel\"\r\n        @delete-selected-edge=\"deleteSelectedEdge\"\r\n        @import-json=\"importJsonConfig\"\r\n      />\r\n\r\n      <div class=\"flow-wrapper\" ref=\"flowWrapper\">\r\n        <VueFlow\r\n          v-model=\"elements\"\r\n          :style=\"{ width: '100%', height: '88vh', background: '#fcfcfc' }\"\r\n          @node-click=\"onNodeClick\"\r\n          @edge-click=\"onEdgeClick\"\r\n          @update-edge=\"onUpdateEdge\"\r\n          @nodeContextMenu=\"onNodeContextMenu\"\r\n          @pane-click=\"onPaneClick\"\r\n          :connection-mode=\"connectionMode\"\r\n          @connect=\"onConnect\"\r\n          @pane-ready=\"onPaneReady\"\r\n          :node-class=\"nodeClass\"\r\n        >\r\n        </VueFlow>\r\n        <NodeContextMenu\r\n          v-if=\"showContextMenu && contextMenuNode\"\r\n          :node=\"contextMenuNode\"\r\n          :visible=\"showContextMenu\"\r\n          :x=\"contextMenuPosition.x\"\r\n          :y=\"contextMenuPosition.y\"\r\n          @update:visible=\"showContextMenu = $event\"\r\n          @update-label=\"updateNodeLabel\"\r\n          @update-command=\"updateNodeCommand\"\r\n          @update-params=\"updateNodeParams\"\r\n        />\r\n        <NodeSelectionMenu\r\n          v-if=\"showNodeMenu\"\r\n          :show=\"showNodeMenu\"\r\n          :position=\"nodeMenuPosition\"\r\n          @update:show=\"showNodeMenu = $event\"\r\n          @select=\"addNode\"\r\n        />\r\n      </div>\r\n    </n-layout-content>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, nextTick } from 'vue';\r\nimport { VueFlow, Position, useVueFlow, addEdge, Edge } from '@vue-flow/core';\r\nimport '@vue-flow/core/dist/style.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { NLayoutContent } from 'naive-ui';\r\n\r\nimport ToolPanel from './ToolPanel.vue';\r\nimport NodeContextMenu from './NodeContextMenu.vue';\r\nimport NodeSelectionMenu from './NodeSelectionMenu.vue';\r\nimport CustomNode from '../types';\r\n// import config from '../types/nodesConfig';\r\n\r\nconst elements = ref<Array<CustomNode | Edge>>([\r\n  { \r\n    id: 'start', \r\n    type: 'input', \r\n    data: { label: 'start', processFunction: async () => { console.log('start'); await delay(1000); } }, \r\n    position: { x: 50, y: 50 },\r\n    sourcePosition: Position.Bottom,\r\n    style: { \r\n      backgroundColor: '#d0d0d0', \r\n      color: 'black',\r\n      borderRadius: '10px',\r\n      width: '120px',\r\n      height: '60px'\r\n    },\r\n    draggable: true,\r\n    selectable: true,\r\n    deletable: false\r\n  },\r\n  { \r\n    id: 'end', \r\n    type: 'output', \r\n    data: { label: 'end', processFunction: async () => { console.log('end'); await delay(1000); } }, \r\n    position: { x: 500, y: 400 },\r\n    sourcePosition: Position.Top,\r\n    style: { \r\n      backgroundColor: '#454545', \r\n      color: 'white',\r\n      borderRadius: '10px',\r\n      width: '120px',\r\n      height: '60px'\r\n    },\r\n    draggable: true,\r\n    selectable: true,\r\n    deletable: false\r\n  },\r\n]);\r\n\r\nconst { \r\n  removeEdges, \r\n  addNodes, \r\n  updateNode, \r\n  removeNodes,\r\n  getEdges,\r\n  setNodes,\r\n  setEdges,\r\n  fitView\r\n} = useVueFlow();\r\n\r\nconst isRunning = ref(false);\r\nconst isStopped = ref(false);\r\nconst currentStep = ref<string | null>(null);\r\nconst selectedNode = ref<CustomNode | null>(null);\r\nconst selectedEdge = ref<Edge | null>(null);\r\nconst connectionMode = ref(false);\r\nconst flowWrapper = ref<HTMLElement | null>(null);\r\n\r\nconst contextMenuNode = ref<CustomNode | null>(null);\r\nconst showContextMenu = ref(false);\r\nconst contextMenuPosition = ref({ x: 0, y: 0 });\r\n\r\nconst showNodeMenu = ref(false);\r\nconst nodeMenuPosition = ref({ x: 0, y: 0 });\r\n\r\nconst stepCount = computed(() => {\r\n  let count = 0;\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    count++;\r\n    currentNode = nextNode;\r\n  }\r\n  \r\n  return count;\r\n});\r\n\r\nconst delay = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\nconst isProtectedNode = (nodeId: string) => {\r\n  return nodeId === 'start' || nodeId === 'end';\r\n};\r\n\r\nconst nodeClass = (node: CustomNode) => {\r\n  if (node.type === 'input') return 'input-node';\r\n  if (node.type === 'output') return 'output-node';\r\n  return 'default-node';\r\n};\r\n\r\nconst onPaneReady = ({ pane }: { pane?: HTMLElement }) => {\r\n  if (pane) {\r\n    pane.tabIndex = 0;\r\n    pane.focus();\r\n  }\r\n};\r\n\r\nconst handleKeyDown = (event: KeyboardEvent) => {\r\n  if ((event.ctrlKey || event.metaKey) && \r\n  (event.key === 'x' || event.key === 'ч')) {\r\n    event.preventDefault();\r\n    deleteSelectedNodeWithEdges();\r\n    deleteSelectedEdge();\r\n  }\r\n  if ((event.ctrlKey || event.metaKey) &&\r\n  (event.key === 'a' || event.key === 'ф')) {\r\n    event.preventDefault();\r\n    showNodeSelectionMenu();\r\n  }\r\n};\r\n\r\nconst deleteSelectedNodeWithEdges = () => {\r\n  if (!selectedNode.value || isProtectedNode(selectedNode.value.id)) {\r\n    console.warn('Нет выбранной ноды для удаления или нода защищена');\r\n    return;\r\n  }\r\n\r\n  const nodeId = selectedNode.value.id;\r\n  const edgesToRemove = getEdges.value.filter(\r\n    edge => edge.source === nodeId || edge.target === nodeId\r\n  );\r\n\r\n  if (edgesToRemove.length > 0) {\r\n    removeEdges(edgesToRemove);\r\n  }\r\n  \r\n  removeNodes([nodeId]);\r\n  elements.value = elements.value.filter(\r\n    el => el.id !== nodeId && \r\n    !edgesToRemove.some(edge => edge.id === el.id)\r\n  );\r\n  \r\n  selectedNode.value = null;\r\n  closeContextMenu();\r\n  updateStepNumbers();\r\n};\r\n\r\nconst showNodeSelectionMenu = (event?: MouseEvent) => {\r\n  if (event) {\r\n    nodeMenuPosition.value = {\r\n      x: event.clientX,\r\n      y: event.clientY\r\n    };\r\n  } else {\r\n    const centerX = window.innerWidth / 2;\r\n    const centerY = window.innerHeight / 2;\r\n    nodeMenuPosition.value = { x: centerX, y: centerY };\r\n  }\r\n  showNodeMenu.value = true;\r\n};\r\n\r\nconst addNode = (nodeData: { label: string, params: any[] }) => {\r\n  const newNodeId = uuidv4();\r\n  \r\n  const params = nodeData.params.reduce((acc, param) => {\r\n    acc[param.name] = param.default !== undefined ? param.default : '';\r\n    return acc;\r\n  }, {} as Record<string, any>);\r\n\r\n  const newNode: CustomNode = {\r\n    id: newNodeId,\r\n    data: { \r\n      label: nodeData.label,\r\n      ...params,\r\n      processFunction: async () => { \r\n        console.log(`Выполняется шаг ${newNodeId}`); \r\n        await delay(1000); \r\n      } \r\n    },\r\n    position: { x: 100 + stepCount.value * 100, y: 150 },\r\n    targetPosition: Position.Top,\r\n    sourcePosition: Position.Bottom,\r\n    style: { \r\n      backgroundColor: '#2196F3', \r\n      color: 'white',\r\n      borderRadius: '50%',\r\n      width: '80px',\r\n      height: '80px'\r\n    }\r\n  };\r\n\r\n  elements.value.push(newNode);\r\n  addNodes([newNode]);\r\n  showNodeMenu.value = false;\r\n};\r\n\r\nconst onConnect = (params: any) => {\r\n  const newEdge = {\r\n    id: `edge-${params.source}-${params.target}`,\r\n    source: params.source,\r\n    target: params.target,\r\n  };\r\n  elements.value = addEdge(newEdge, elements.value);\r\n  connectionMode.value = false;\r\n  updateStepNumbers();\r\n};\r\n\r\nconst onNodeClick = (event: any) => {\r\n  if (connectionMode.value) return;\r\n  if (isProtectedNode(event.node.id)) {\r\n    selectedNode.value = null;\r\n    selectedEdge.value = null;\r\n    closeContextMenu();\r\n    return;\r\n  }\r\n  selectedNode.value = event.node;\r\n  selectedEdge.value = null;\r\n  closeContextMenu();\r\n};\r\n\r\nconst onEdgeClick = (event: any) => {\r\n  selectedNode.value = null;\r\n  selectedEdge.value = event.edge;\r\n  closeContextMenu();\r\n};\r\n\r\nconst onUpdateEdge = (event: any, edge: Edge) => {\r\n  console.log('onUpdateEdge', edge);\r\n}\r\n\r\nconst onNodeContextMenu = (event: { event: MouseEvent, node: CustomNode }) => {\r\n  if (!event?.node || isProtectedNode(event.node.id)) return;\r\n  \r\n  event.event.preventDefault();\r\n  \r\n  selectedNode.value = event.node;\r\n  contextMenuNode.value = event.node;\r\n  \r\n  const flowWrapperRect = flowWrapper.value?.getBoundingClientRect();\r\n  if (!flowWrapperRect) return;\r\n  \r\n  contextMenuPosition.value = {\r\n    x: event.event.clientX - flowWrapperRect.left,\r\n    y: event.event.clientY - flowWrapperRect.top\r\n  };\r\n  \r\n  showContextMenu.value = true;\r\n};\r\n\r\nconst onPaneClick = () => {\r\n  closeContextMenu();\r\n};\r\n\r\nconst closeContextMenu = () => {\r\n  contextMenuNode.value = null;\r\n};\r\n\r\nconst updateNodeLabel = (newLabel: string) => {\r\n  if (selectedNode.value && !isProtectedNode(selectedNode.value.id)) {\r\n    const nodeIndex = elements.value.findIndex(el => el.id === selectedNode.value?.id);\r\n    if (nodeIndex !== -1) {\r\n      (elements.value[nodeIndex] as CustomNode).data.label = newLabel;\r\n      updateNode(selectedNode.value.id, elements.value[nodeIndex]);\r\n    }\r\n  }\r\n};\r\n\r\nconst updateNodeParams = (newParams: Record<string, any>) => {\r\n  if (selectedNode.value) {\r\n    const nodeIndex = elements.value.findIndex(el => el.id === selectedNode.value?.id);\r\n    if (nodeIndex !== -1) {\r\n      const node = { ...elements.value[nodeIndex] } as CustomNode;\r\n      \r\n      // update all parameters\r\n      Object.keys(newParams).forEach(key => {\r\n        node.data[key] = newParams[key];\r\n      });\r\n      \r\n      // update the node in the array of elements\r\n      elements.value[nodeIndex] = node;\r\n      \r\n      // update the node in VueFlow\r\n      updateNode(node.id, node);\r\n    }\r\n  }\r\n};\r\n\r\nconst deleteSelectedEdge = () => {\r\n  if (selectedEdge.value) {\r\n    removeEdges([selectedEdge.value]);\r\n    elements.value = elements.value.filter(el => el.id !== selectedEdge.value?.id);\r\n    selectedEdge.value = null;\r\n    updateStepNumbers();\r\n  }\r\n}\r\n\r\nconst updateStepNumbers = () => {\r\n  // let stepNumber = 1;\r\n  let currentNode = 'start';\r\n  \r\n  while (currentNode !== 'end') {\r\n    const nextNode = getNextNode(currentNode);\r\n    if (!nextNode || nextNode === 'end') break;\r\n    \r\n    const node = elements.value.find(n => n.id === nextNode) as CustomNode;\r\n    if (node && !isProtectedNode(node.id)) {\r\n      updateNode(node.id, node);\r\n      // stepNumber++;\r\n    }\r\n    \r\n    currentNode = nextNode;\r\n  }\r\n};\r\n\r\nconst importJsonConfig = (jsonConfig: any) => {\r\n  try {\r\n    // guard expression\r\n    if (!jsonConfig?.steps || !Array.isArray(jsonConfig.steps)) {\r\n      throw new Error('Invalid configuration: missing steps array');\r\n    }\r\n\r\n    const newNodes: CustomNode[] = [];\r\n    const newEdges: Edge[] = [];\r\n    let xPos = 50;\r\n    const yPos = 150;\r\n\r\n    // start node\r\n    newNodes.push({\r\n      id: 'start',\r\n      type: 'input',\r\n      data: { label: 'start', processFunction: async () => await delay(1000) },\r\n      position: { x: xPos, y: 50 },\r\n      sourcePosition: Position.Bottom,\r\n      style: { \r\n        backgroundColor: '#d0d0d0',\r\n        color: 'black',\r\n        borderRadius: '10px',\r\n        width: '120px',\r\n        height: '60px'\r\n      },\r\n      draggable: true,\r\n      selectable: true,\r\n      deletable: false\r\n    });\r\n    xPos += 200;\r\n\r\n    // steps processing\r\n    jsonConfig.steps.forEach((step: any) => {\r\n      const nodeId = uuidv4();\r\n      // const [nodeType, operationName] = step.name.split('_');\r\n      \r\n      const nodeData: any = {\r\n        label: step.name,\r\n        command: step.command || '',\r\n        processFunction: async () => await delay(1000)\r\n      };\r\n\r\n      // add all params from the step to nodeData\r\n      if (step.params) {\r\n        Object.keys(step.params).forEach(paramName => {\r\n          nodeData[paramName] = step.params[paramName];\r\n        });\r\n      }\r\n\r\n      // add node\r\n      newNodes.push({\r\n        id: nodeId,\r\n        data: nodeData,\r\n        position: { x: xPos, y: yPos },\r\n        targetPosition: Position.Top,\r\n        sourcePosition: Position.Bottom,\r\n        style: { \r\n          backgroundColor: '#2196F3',\r\n          color: 'white',\r\n          borderRadius: '50%',\r\n          width: '80px',\r\n          height: '80px'\r\n        },\r\n        draggable: true,\r\n        selectable: true,\r\n        deletable: true\r\n      });\r\n\r\n      // add edge\r\n      if (newNodes.length > 1) {\r\n        const prevNode = newNodes[newNodes.length-2];\r\n        newEdges.push({\r\n          id: `edge-${prevNode.id}-${nodeId}`,\r\n          source: prevNode.id,\r\n          target: nodeId,\r\n        });\r\n      }\r\n\r\n      xPos += 200;\r\n    });\r\n\r\n    // end node\r\n    newNodes.push({\r\n      id: 'end',\r\n      type: 'output',\r\n      data: { label: 'end', command: '', processFunction: async () => await delay(1000) },\r\n      position: { x: xPos, y: 50 },\r\n      sourcePosition: Position.Top,\r\n      style: { \r\n        backgroundColor: '#454545',\r\n        color: 'white',\r\n        borderRadius: '10px',\r\n        width: '120px',\r\n        height: '60px'\r\n      },\r\n      draggable: true,\r\n      selectable: true,\r\n      deletable: false\r\n    });\r\n\r\n    // linking the last node to end\r\n    if (newNodes.length > 2) {\r\n      const lastStepNode = newNodes[newNodes.length-2];\r\n      newEdges.push({\r\n        id: `edge-${lastStepNode.id}-end`,\r\n        source: lastStepNode.id,\r\n        target: 'end',\r\n      });\r\n    }\r\n\r\n    // graph update\r\n    elements.value = [...newNodes, ...newEdges];\r\n    setNodes(newNodes);\r\n    setEdges(newEdges);\r\n\r\n    // auto-scaling\r\n    nextTick(() => fitView({ padding: 0.5 }));\r\n\r\n  } catch (error) {\r\n    console.error('Graph import error:', error);\r\n  }\r\n};\r\n\r\nconst startFlow = async () => {\r\n  isRunning.value = true;\r\n  isStopped.value = false;\r\n  currentStep.value = 'start';\r\n\r\n  try {\r\n    await executeStep('start');\r\n    let nextNode = getNextNode('start');\r\n\r\n    while (nextNode && isRunning.value) {\r\n      currentStep.value = nextNode;\r\n      await executeStep(nextNode);\r\n      nextNode = getNextNode(nextNode);\r\n    }\r\n\r\n    if (isRunning.value) {\r\n      currentStep.value = 'end';\r\n      await executeStep('end');\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка выполнения графа:', error);\r\n  } finally {\r\n    isRunning.value = false;\r\n    currentStep.value = null;\r\n  }\r\n};\r\n\r\nconst stopFlow = () => {\r\n  isRunning.value = false;\r\n  isStopped.value = true;\r\n};\r\n\r\nconst continueFlow = async () => {\r\n  if (!currentStep.value) return;\r\n\r\n  isStopped.value = false;\r\n  isRunning.value = true;\r\n\r\n  try {\r\n    let nextNode = getNextNode(currentStep.value);\r\n\r\n    while (nextNode && isRunning.value) {\r\n      currentStep.value = nextNode;\r\n      await executeStep(nextNode);\r\n      nextNode = getNextNode(nextNode);\r\n    }\r\n\r\n    if (isRunning.value) {\r\n      currentStep.value = 'end';\r\n      await executeStep('end');\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка выполнения графа:', error);\r\n  } finally {\r\n    isRunning.value = false;\r\n    isStopped.value = false;\r\n    currentStep.value = null;\r\n  }\r\n};\r\n\r\nconst resetFlow = () => {\r\n  isRunning.value = false;\r\n  isStopped.value = false;\r\n  currentStep.value = null;\r\n};\r\n\r\nconst executeStep = async (nodeId: string) => {\r\n  const node = elements.value.find((el: any) => el.id === nodeId) as CustomNode;\r\n  if (node?.data?.processFunction) {\r\n    await node.data.processFunction();\r\n  }\r\n};\r\n\r\nconst getNextNode = (nodeId: string): string | null => {\r\n  const edges = elements.value.filter((el: any) => el.source === nodeId && el.target) as Edge[];\r\n  return edges.length > 0 ? edges[0].target : null;\r\n};\r\n\r\nonMounted(() => {\r\n  if (flowWrapper.value) {\r\n    flowWrapper.value.focus();\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flow-container {\r\n  font-family: sans-serif;\r\n  height: 100vh;\r\n  outline: none;\r\n}\r\n\r\n.flow-wrapper {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  outline: none;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.node-context-menu {\r\n  position: absolute;\r\n}\r\n\r\n.node-edit-form {\r\n  padding: 20px;\r\n}\r\n</style>\r\n\r\n<style>\r\n.vue-flow__node {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.vue-flow__node.input-node {\r\n  background-color: #d0d0d0 !important;\r\n  border-radius: 10px !important;\r\n  width: 120px !important;\r\n  height: 60px !important;\r\n}\r\n\r\n.vue-flow__node.output-node {\r\n  background-color: #454545 !important;\r\n  border-radius: 10px !important;\r\n  width: 120px !important;\r\n  height: 60px !important;\r\n}\r\n\r\n.vue-flow__node.default-node {\r\n  background-color: #2196F3 !important;\r\n  border-radius: 50% !important;\r\n  width: 80px !important;\r\n  height: 80px !important;\r\n}\r\n\r\n.vue-flow__node.selected {\r\n  box-shadow: 0 0 0 2px #555;\r\n}\r\n\r\n.vue-flow__edge-path {\r\n  stroke: #555;\r\n  stroke-width: 2;\r\n}\r\n\r\n.vue-flow__handle {\r\n  width: 10px;\r\n  height: 7px;\r\n  background-color: #555;\r\n}\r\n\r\n.vue-flow__handle-bottom {\r\n  bottom: -5px;\r\n}\r\n\r\n.vue-flow__handle-top {\r\n  top: -5px;\r\n}\r\n\r\n.vue-flow__handle-left {\r\n  left: -5px;\r\n}\r\n\r\n.vue-flow__handle-right {\r\n  right: -5px;\r\n}\r\n</style>","import script from \"./FlowBuilder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FlowBuilder.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./FlowBuilder.vue?vue&type=style&index=0&id=0b77397a&scoped=true&lang=css\"\nimport \"./FlowBuilder.vue?vue&type=style&index=1&id=0b77397a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b77397a\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport {\r\n  // NLayoutHeader,\r\n  // NH1,\r\n  // NSpace,\r\n} from 'naive-ui';\r\n  import FlowBuilder from './components/FlowBuilder.vue';\r\n\r\n  import hljs from 'highlight.js/lib/core'\r\n  import javascript from 'highlight.js/lib/languages/javascript'\r\n\r\n  \nexport default /*@__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\nhljs.registerLanguage('javascript', javascript);\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_n_message_provider = _resolveComponent(\"n-message-provider\")!\n  const _component_n_config_provider = _resolveComponent(\"n-config-provider\")!\n\n  return (_openBlock(), _createBlock(_component_n_config_provider, { hljs: _unref(hljs) }, {\n    default: _withCtx(() => [\n      _createVNode(_component_n_message_provider, null, {\n        default: _withCtx(() => [\n          _createVNode(FlowBuilder)\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }, 8, [\"hljs\"]))\n}\n}\n\n})","<template>\r\n  <!-- <n-layout-header bordered>\r\n    <n-space justify=\"space-between\" align=\"center\" style=\"padding: 0 20px\">\r\n      <n-h1 style=\"margin: 0\">Flow Builder</n-h1>\r\n    </n-space>\r\n  </n-layout-header> -->\r\n  <n-config-provider :hljs=\"hljs\">\r\n    <n-message-provider>\r\n      <FlowBuilder />\r\n    </n-message-provider>\r\n  </n-config-provider>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  // NLayoutHeader,\r\n  // NH1,\r\n  // NSpace,\r\n} from 'naive-ui';\r\n  import FlowBuilder from './components/FlowBuilder.vue';\r\n\r\n  import hljs from 'highlight.js/lib/core'\r\n  import javascript from 'highlight.js/lib/languages/javascript'\r\n\r\n  hljs.registerLanguage('javascript', javascript);\r\n</script>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default {\r\n  beforeMount(el, binding) {\r\n    el.clickOutsideEvent = function(event) {\r\n      if (!(el === event.target || el.contains(event.target))) {\r\n        binding.value(event);\r\n      }\r\n    };\r\n    document.body.addEventListener('click', el.clickOutsideEvent);\r\n  },\r\n  unmounted(el) {\r\n    document.body.removeEventListener('click', el.clickOutsideEvent);\r\n  }\r\n};","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport clickOutside from './directives/clickOutside';\r\nimport naive from 'naive-ui';\r\n\r\nconst app = createApp(App);\r\napp.directive('click-outside', clickOutside);\r\napp.use(naive)\r\n\r\napp.mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkflow_builder\"] = self[\"webpackChunkflow_builder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(2607); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["pathsData","question","d","fill","settings","plus","play","pause","delete","refresh","code","download","upload","edit","props","size","type","Number","String","default","color","viewBox","paths","Array","required","setup","h","xmlns","width","height","focusable","map","pathAttrs","__exports__","_hoisted_1","class","_defineComponent","__name","elements","isRunning","Boolean","isStopped","selectedNode","Object","selectedEdge","emits","__props","emit","__emit","getEdges","useVueFlow","message","useMessage","fileInput","ref","createIcon","iconName","iconPaths","CustomIcon","QuestionIcon","PlusIcon","PlayIcon","PauseIcon","DeleteIcon","RefreshIcon","CodeIcon","DownloadIcon","UploadIcon","EditIcon","flowName","flowDescription","daguYaml","pipelineJson","showPipelineJson","showDaguYaml","showHints","isGraphValid","computed","visited","Set","currentNode","has","add","edgesFromCurrent","value","filter","e","source","length","target","getNextNode","nodeId","edges","el","generateDAGUYaml","steps","nextNode","node","find","n","id","isProtectedNode","step","name","data","label","executor","config","silent","headers","command","url","output","toUpperCase","reduce","acc","header","key","split","s","trim","filterCode","getPreviousNodeOutputName","list","generateNodeFilterConditions","conditions","output_fields","generateOutputFields","replace","push","daguConfig","description","YAML","edge","prevNode","cond","field","operator","undefined","fieldPath","includes","join","isNaN","fields","generatePipelineJson","allParams","keys","params","pipelineConfig","JSON","stringify","downloadDAGUYaml","blob","Blob","URL","createObjectURL","a","document","createElement","href","body","appendChild","click","removeChild","revokeObjectURL","downloadPipelineJson","triggerFileInput","handleFileSelect","async","input","event","files","file","content","readFileAsText","jsonConfig","parse","Error","success","error","console","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","NSpace","justify","align","style","_withCtx","NText","strong","_createTextVNode","_toDisplayString","_","NPopover","trigger","NButton","text","NIcon","NCard","title","NForm","NFormItem","path","NInput","$event","placeholder","onClick","$emit","circle","icon","disabled","_createBlock","_createCommentVNode","_Fragment","show","ghost","__","NCode","language","_createElementVNode","ref_key","accept","onChange","NList","NListItem","validateConfig","nodesConfigJson","visible","x","y","localLabel","localParams","newCondition","operatorOptions","currentParams","category","values","nodesConfig","nodeConfig","watch","newNode","forEach","param","isArray","immediate","deep","addCondition","removeCondition","index","splice","saveAndClose","positionStyle","left","top","position","zIndex","updateLabel","_normalizeStyle","onBlur","_renderList","vertical","wrap","NTag","closable","onClose","NSelect","options","NDynamicTags","enum","NInputNumber","NSwitch","item","showMenu","get","set","nodeOptions","section","nodes","entries","children","nodeData","handleNodeSelect","option","NDropdown","placement","onSelect","processFunction","log","delay","sourcePosition","Position","Bottom","backgroundColor","borderRadius","draggable","selectable","deletable","Top","removeEdges","addNodes","updateNode","removeNodes","setNodes","setEdges","fitView","currentStep","connectionMode","flowWrapper","contextMenuNode","showContextMenu","contextMenuPosition","showNodeMenu","nodeMenuPosition","stepCount","count","ms","res","setTimeout","nodeClass","onPaneReady","pane","tabIndex","focus","handleKeyDown","ctrlKey","metaKey","preventDefault","deleteSelectedNodeWithEdges","deleteSelectedEdge","showNodeSelectionMenu","warn","edgesToRemove","some","closeContextMenu","updateStepNumbers","clientX","clientY","centerX","window","innerWidth","centerY","innerHeight","addNode","newNodeId","uuidv4","targetPosition","onConnect","newEdge","addEdge","onNodeClick","onEdgeClick","onUpdateEdge","onNodeContextMenu","flowWrapperRect","getBoundingClientRect","onPaneClick","updateNodeLabel","newLabel","nodeIndex","findIndex","updateNodeParams","newParams","importJsonConfig","newNodes","newEdges","xPos","yPos","paramName","lastStepNode","nextTick","padding","startFlow","executeStep","stopFlow","continueFlow","resetFlow","onMounted","tabindex","onKeydown","NLayoutContent","ToolPanel","onAddNode","onStartFlow","onStopFlow","onContinueFlow","onResetFlow","onUpdateNodeLabel","onDeleteSelectedEdge","onImportJson","VueFlow","modelValue","background","NodeContextMenu","onUpdateLabel","onUpdateCommand","updateNodeCommand","onUpdateParams","NodeSelectionMenu","hljs","registerLanguage","javascript","_component_n_message_provider","_resolveComponent","_component_n_config_provider","FlowBuilder","beforeMount","binding","clickOutsideEvent","contains","addEventListener","unmounted","removeEventListener","app","createApp","App","directive","clickOutside","use","naive","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","r","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}